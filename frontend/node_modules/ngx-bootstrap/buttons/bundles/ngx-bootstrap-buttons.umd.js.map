{"version":3,"file":"ngx-bootstrap-buttons.umd.js","sources":["ng://ngx-bootstrap/buttons/button-checkbox.directive.ts","ng://ngx-bootstrap/buttons/button-radio.directive.ts","ng://ngx-bootstrap/buttons/button-radio-group.directive.ts","ng://ngx-bootstrap/buttons/buttons.module.ts"],"sourcesContent":["// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value: boolean | string;\n  protected isDisabled: boolean;\n\n  protected onChange = Function.prototype;\n  protected onTouched = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: boolean | string | null): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Provider,\n  Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio: string;\n  /** If `true` — radio button can be unchecked */\n  @Input() uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input()\n  get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: null | string) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` — radio button is disabled */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get controlOrGroupDisabled() {\n    return this.disabled || (this.group && this.group.disabled) ? true : undefined;\n  }\n\n  @HostBinding('class.disabled')\n  get hasDisabledClass() {\n    // Although the radio is disabled the active radio should still stand out.\n    // The disabled class will prevent this so don't add it on the active radio\n    return this.controlOrGroupDisabled && !this.isActive;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-checked')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  @HostBinding('attr.role') readonly role: string = 'radio';\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): undefined | number {\n    if (this.controlOrGroupDisabled) {\n      // Disabled radio buttons should not receive focus\n      return undefined;\n    } else if (this.isActive || this.group == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  private _value: null | string;\n  private _disabled: boolean;\n  private _hasFocus = false;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Optional()\n    @Inject(forwardRef(() => ButtonRadioGroupDirective))\n    private group: ButtonRadioGroupDirective\n  ) {}\n\n  @HostListener('click')\n  toggleIfAllowed(): void {\n    if (!this.canToggle()) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  @HostListener('keydown.space', ['$event'])\n  onSpacePressed(event: KeyboardEvent) {\n    this.toggleIfAllowed();\n    event.preventDefault();\n  }\n\n  focus() {\n    this.el.nativeElement.focus();\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this._hasFocus = true;\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this._hasFocus = false;\n    this.onTouched();\n  }\n\n  canToggle(): boolean {\n    return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  _onChange(value: string): void {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disabled = disabled;\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Provider,\n  QueryList\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  @HostBinding('attr.role') readonly role: string = 'radiogroup';\n\n  @ContentChildren(forwardRef(() => ButtonRadioDirective))\n  radioButtons: QueryList<ButtonRadioDirective>;\n\n  get value() {\n    return this._value;\n  }\n  set value(value: string | null) {\n    this._value = value;\n    this.onChange(value);\n  }\n\n  private _value: string | null;\n\n  private _disabled: boolean;\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): null | number {\n    if (this._disabled) {\n      return null;\n    } else {\n      return 0;\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: string | null): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.radioButtons) {\n      this._disabled = disabled;\n      this.radioButtons.forEach(buttons => {\n        buttons.setDisabledState(disabled);\n      });\n      this.cdr.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this._disabled) {\n      return;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n    if (activeRadio) {\n      activeRadio.focus();\n    } else {\n      const firstEnabled = this.radioButtons.find(r => !r.disabled);\n      if (firstEnabled) {\n        firstEnabled.focus();\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  @HostListener('keydown.ArrowRight', ['$event'])\n  @HostListener('keydown.ArrowDown', ['$event'])\n  selectNext(event: KeyboardEvent) {\n    this.selectInDirection('next');\n    event.preventDefault();\n  }\n\n  @HostListener('keydown.ArrowLeft', ['$event'])\n  @HostListener('keydown.ArrowUp', ['$event'])\n  selectPrevious(event: KeyboardEvent) {\n    this.selectInDirection('previous');\n    event.preventDefault();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private selectInDirection(direction: 'next' | 'previous') {\n    if (this._disabled) {\n      return;\n    }\n    function nextIndex(currentIndex: number, buttonRadioDirectives: ButtonRadioDirective[]) {\n      const step = direction === 'next' ? 1 : -1;\n      let calcIndex = (currentIndex + step) % buttonRadioDirectives.length;\n      if (calcIndex < 0) {\n        calcIndex = buttonRadioDirectives.length - 1;\n      }\n\n      return calcIndex;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n\n    if (activeRadio) {\n      const buttonRadioDirectives = this.radioButtons.toArray();\n      const currentActiveIndex = buttonRadioDirectives.indexOf(activeRadio);\n      for (\n        let i = nextIndex(currentActiveIndex, buttonRadioDirectives);\n        i !== currentActiveIndex;\n        i = nextIndex(i, buttonRadioDirectives)\n      ) {\n        if (buttonRadioDirectives[i].canToggle()) {\n          buttonRadioDirectives[i].toggleIfAllowed();\n          buttonRadioDirectives[i].focus();\n          break;\n        }\n      }\n    }\n  }\n\n  private getActiveOrFocusedRadio(): ButtonRadioDirective | undefined {\n    return this.radioButtons.find(button => button.isActive) || this.radioButtons.find(button => button.hasFocus);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders<ButtonsModule> {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","Directive","Input","HostBinding","HostListener","ElementRef","ChangeDetectorRef","Renderer2","Optional","Inject","RADIO_CONTROL_VALUE_ACCESSOR","ContentChildren","NgModule"],"mappings":"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"}