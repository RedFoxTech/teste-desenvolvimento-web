{"version":3,"file":"ngx-bootstrap-accordion.umd.js","sources":["ng://ngx-bootstrap/accordion/accordion.config.ts","ng://ngx-bootstrap/accordion/accordion.component.ts","ng://ngx-bootstrap/accordion/accordion-group.component.ts","ng://ngx-bootstrap/accordion/accordion.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service, provides default values for the AccordionComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccordionConfig {\n  /** Whether the other panels should be closed when a panel is opened */\n  closeOthers: Boolean = false;\n  /** turn on/off animation */\n  isAnimated: Boolean = false;\n}\n","import { Component, Input } from '@angular/core';\nimport { AccordionPanelComponent } from './accordion-group.component';\nimport { AccordionConfig } from './accordion.config';\n\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\n@Component({\n  selector: 'accordion',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[attr.aria-multiselectable]': 'closeOthers',\n    role: 'tablist',\n    class: 'panel-group',\n    style: 'display: block'\n  }\n})\nexport class AccordionComponent {\n  /** turn on/off animation */\n  @Input() isAnimated = false;\n  /** if `true` expanding one item will close all others */\n  @Input() closeOthers: boolean;\n\n  protected groups: AccordionPanelComponent[] = [];\n\n  constructor(config: AccordionConfig) {\n    Object.assign(this, config);\n  }\n\n  closeOtherPanels(openGroup: AccordionPanelComponent): void {\n    if (!this.closeOthers) {\n      return;\n    }\n\n    this.groups.forEach((group: AccordionPanelComponent) => {\n      if (group !== openGroup) {\n        group.isOpen = false;\n      }\n    });\n  }\n\n  addGroup(group: AccordionPanelComponent): void {\n    group.isAnimated = this.isAnimated;\n    this.groups.push(group);\n  }\n\n  removeGroup(group: AccordionPanelComponent): void {\n    const index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  }\n}\n","import {\n  Component, HostBinding, Inject, Input, OnDestroy, OnInit, Output, EventEmitter\n} from '@angular/core';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { AccordionComponent } from './accordion.component';\n\n/**\n * ### Accordion heading\n * Instead of using `heading` attribute on the `accordion-group`, you can use\n * an `accordion-heading` attribute on `any` element inside of a group that\n * will be used as group's header template.\n */\n@Component({\n  selector: 'accordion-group, accordion-panel',\n  templateUrl: './accordion-group.component.html',\n  host: {\n    class: 'panel',\n    style: 'display: block'\n  },\n  styleUrls: ['./accordion.scss']\n})\nexport class AccordionPanelComponent implements OnInit, OnDestroy {\n  /** turn on/off animation */\n  isAnimated = false;\n  /** Clickable text in accordion's group header, check `accordion heading` below for using html in header */\n  @Input() heading: string;\n  /** Provides an ability to use Bootstrap's contextual panel classes\n   * (`panel-primary`, `panel-success`, `panel-info`, etc...).\n   * List of all available classes [available here]\n   * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\n   */\n  @Input() panelClass: string;\n  /** if <code>true</code> â€” disables accordion group */\n  @Input() isDisabled: boolean;\n  /** Emits when the opened state changes */\n  @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter();\n\n  // Questionable, maybe .panel-open should be on child div.panel element?\n  /** Is accordion group open or closed. This property supports two-way binding */\n  @HostBinding('class.panel-open')\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  set isOpen(value: boolean) {\n    if (value !== this.isOpen) {\n      if (value) {\n        this.accordion.closeOtherPanels(this);\n      }\n      this._isOpen = value;\n      Promise.resolve(null).then(() => {\n        this.isOpenChange.emit(value);\n      })\n        .catch((error: Error) => {\n          /* tslint:disable: no-console */\n          console.log(error);\n        });\n    }\n  }\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  protected _isOpen = false;\n  protected accordion: AccordionComponent;\n\n  constructor(@Inject(AccordionComponent) accordion: AccordionComponent) {\n    this.accordion = accordion;\n  }\n\n  ngOnInit(): void {\n    this.panelClass = this.panelClass || 'panel-default';\n    this.accordion.addGroup(this);\n  }\n\n  ngOnDestroy(): void {\n    this.accordion.removeGroup(this);\n  }\n\n  toggleOpen(): void {\n    if (!this.isDisabled) {\n      this.isOpen = !this.isOpen;\n    }\n  }\n}\n","/* tslint:disable: max-classes-per-file */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { AccordionComponent } from './accordion.component';\nimport { AccordionPanelComponent } from './accordion-group.component';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\n@NgModule({\n  imports: [CommonModule, CollapseModule],\n  declarations: [AccordionComponent, AccordionPanelComponent],\n  exports: [AccordionComponent, AccordionPanelComponent]\n})\nexport class AccordionModule {\n  static forRoot(): ModuleWithProviders<AccordionModule> {\n    return { ngModule: AccordionModule, providers: [] };\n  }\n}\n"],"names":["Injectable","Component","Input","EventEmitter","isBs3","Inject","Output","HostBinding","NgModule","CommonModule","CollapseModule"],"mappings":"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"}