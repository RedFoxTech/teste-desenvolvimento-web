{"version":3,"file":"ngx-bootstrap-accordion.js","sources":["ng://ngx-bootstrap/accordion/accordion.config.ts","ng://ngx-bootstrap/accordion/accordion.component.ts","ng://ngx-bootstrap/accordion/accordion-group.component.ts","ng://ngx-bootstrap/accordion/accordion.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service, provides default values for the AccordionComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccordionConfig {\n  /** Whether the other panels should be closed when a panel is opened */\n  closeOthers: Boolean = false;\n  /** turn on/off animation */\n  isAnimated: Boolean = false;\n}\n","import { Component, Input } from '@angular/core';\nimport { AccordionPanelComponent } from './accordion-group.component';\nimport { AccordionConfig } from './accordion.config';\n\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\n@Component({\n  selector: 'accordion',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[attr.aria-multiselectable]': 'closeOthers',\n    role: 'tablist',\n    class: 'panel-group',\n    style: 'display: block'\n  }\n})\nexport class AccordionComponent {\n  /** turn on/off animation */\n  @Input() isAnimated = false;\n  /** if `true` expanding one item will close all others */\n  @Input() closeOthers: boolean;\n\n  protected groups: AccordionPanelComponent[] = [];\n\n  constructor(config: AccordionConfig) {\n    Object.assign(this, config);\n  }\n\n  closeOtherPanels(openGroup: AccordionPanelComponent): void {\n    if (!this.closeOthers) {\n      return;\n    }\n\n    this.groups.forEach((group: AccordionPanelComponent) => {\n      if (group !== openGroup) {\n        group.isOpen = false;\n      }\n    });\n  }\n\n  addGroup(group: AccordionPanelComponent): void {\n    group.isAnimated = this.isAnimated;\n    this.groups.push(group);\n  }\n\n  removeGroup(group: AccordionPanelComponent): void {\n    const index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  }\n}\n","import {\n  Component, HostBinding, Inject, Input, OnDestroy, OnInit, Output, EventEmitter\n} from '@angular/core';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { AccordionComponent } from './accordion.component';\n\n/**\n * ### Accordion heading\n * Instead of using `heading` attribute on the `accordion-group`, you can use\n * an `accordion-heading` attribute on `any` element inside of a group that\n * will be used as group's header template.\n */\n@Component({\n  selector: 'accordion-group, accordion-panel',\n  templateUrl: './accordion-group.component.html',\n  host: {\n    class: 'panel',\n    style: 'display: block'\n  },\n  styleUrls: ['./accordion.scss']\n})\nexport class AccordionPanelComponent implements OnInit, OnDestroy {\n  /** turn on/off animation */\n  isAnimated = false;\n  /** Clickable text in accordion's group header, check `accordion heading` below for using html in header */\n  @Input() heading: string;\n  /** Provides an ability to use Bootstrap's contextual panel classes\n   * (`panel-primary`, `panel-success`, `panel-info`, etc...).\n   * List of all available classes [available here]\n   * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\n   */\n  @Input() panelClass: string;\n  /** if <code>true</code> â€” disables accordion group */\n  @Input() isDisabled: boolean;\n  /** Emits when the opened state changes */\n  @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter();\n\n  // Questionable, maybe .panel-open should be on child div.panel element?\n  /** Is accordion group open or closed. This property supports two-way binding */\n  @HostBinding('class.panel-open')\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  set isOpen(value: boolean) {\n    if (value !== this.isOpen) {\n      if (value) {\n        this.accordion.closeOtherPanels(this);\n      }\n      this._isOpen = value;\n      Promise.resolve(null).then(() => {\n        this.isOpenChange.emit(value);\n      })\n        .catch((error: Error) => {\n          /* tslint:disable: no-console */\n          console.log(error);\n        });\n    }\n  }\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  protected _isOpen = false;\n  protected accordion: AccordionComponent;\n\n  constructor(@Inject(AccordionComponent) accordion: AccordionComponent) {\n    this.accordion = accordion;\n  }\n\n  ngOnInit(): void {\n    this.panelClass = this.panelClass || 'panel-default';\n    this.accordion.addGroup(this);\n  }\n\n  ngOnDestroy(): void {\n    this.accordion.removeGroup(this);\n  }\n\n  toggleOpen(): void {\n    if (!this.isDisabled) {\n      this.isOpen = !this.isOpen;\n    }\n  }\n}\n","/* tslint:disable: max-classes-per-file */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { AccordionComponent } from './accordion.component';\nimport { AccordionPanelComponent } from './accordion-group.component';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\n@NgModule({\n  imports: [CommonModule, CollapseModule],\n  declarations: [AccordionComponent, AccordionPanelComponent],\n  exports: [AccordionComponent, AccordionPanelComponent]\n})\nexport class AccordionModule {\n  static forRoot(): ModuleWithProviders<AccordionModule> {\n    return { ngModule: AccordionModule, providers: [] };\n  }\n}\n"],"names":[],"mappings":"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"}