{"version":3,"sources":["ng://ngx-bootstrap/utils/trigger.class.ts","ng://ngx-bootstrap/utils/triggers.ts","ng://ngx-bootstrap/utils/theme-provider.ts","ng://ngx-bootstrap/utils/facade/browser.ts","ng://ngx-bootstrap/utils/linked-list.class.ts","ng://ngx-bootstrap/utils/utils.class.ts","ng://ngx-bootstrap/utils/warn-once.ts","ng://ngx-bootstrap/utils/decorators.ts"],"names":["Trigger","open","close","this","prototype","isManual","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","length","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","guessedVersion","win","window","document","location","gc","performance","Event","MouseEvent","KeyboardEvent","EventTarget","History","Location","EventListener","LinkedList","asArray","get","position","current","head","index","next","value","add","node","undefined","previous","tail","currentPreviousNode","getNode","currentNextNode","createInternalArrayRepresentation","remove","removedNode","set","toArray","findAll","fn","result","push","_this","args","_i","arguments","forEach","arg","pop","last","unshift","reverse","shift","lastItem","indexOf","some","every","toString","find","findIndex","outArray","Utils","reflow","element","offsetHeight","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","_messagesHash","_hideMsg","console","defaultValue","target","propertyKey","_key","Object","defineProperty","prevValue","emit","__theme","spanEl","createElement","innerText","body","appendChild","classList","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","renderer","showFn","hideFn","toggleFn","listeners","Function","listen","unsubscribeFn","options","_registerHide","registerHide","useToggle","toggle","show","hide","outsideEsc","event","contains","targets","outsideClick","theme","msg","isDevMode","warn"],"mappings":"4VASE,SAAAA,EAAYC,EAAcC,GACxBC,KAAKF,KAAOA,EACZE,KAAKD,MAAQA,GAASD,EAM1B,OAHED,EAAAI,UAAAC,SAAA,WACE,MAAqB,WAAdF,KAAKF,MAAoC,WAAfE,KAAKD,OAE1CF,SCIMM,EAAkB,CACtBC,MAAO,CAAC,YAAa,YACrBC,MAAO,CAAC,UAAW,aAIrB,SAAgBC,EAAcC,EAAkBC,QAAA,IAAAA,IAAAA,EAAAL,OACxCM,GAAmBF,GAAY,IAAIG,OAEzC,GAA+B,IAA3BD,EAAgBE,OAClB,MAAO,OAGHC,EAAiBH,EACpBI,MAAM,OACNC,KAAG,SAAEC,GAAoB,OAAAA,EAAQF,MAAM,QACvCC,KAAG,SAAEE,OACEC,EAAQT,EAAQQ,EAAY,KAAOA,EAEzC,OAAO,IAAInB,EAAQoB,EAAM,GAAIA,EAAM,OAGjCC,EAAiBN,EAAeO,QAAM,SAAEH,GAC5C,OAAAA,EAAYd,cAGd,GAAIgB,EAAeP,OAAS,EAC1B,MAAM,IAAIS,MAAM,4DAGlB,GAA8B,IAA1BF,EAAeP,QAAgBC,EAAeD,OAAS,EACzD,MAAM,IAAIS,MAAM,2EAGlB,OAAOR;;;;;;;;ICrDLS,ECSEC,EAAyB,oBAAXC,QAA0BA,QAAM,GAGvCC,EAAWF,EAAIE,SACJF,EAAIG,SACVH,EAAII,GACKJ,EAAIK,aAAcL,EAAIK,YAC5BL,EAAIM,MACCN,EAAIO,WACDP,EAAIQ,cACNR,EAAIS,YACRT,EAAIU,QACHV,EAAIW,SACCX,EAAIY,+BCxBjC,SAAAC,IACEnC,KAAAW,OAAS,EAOCX,KAAAoC,QAAe,GAkR3B,OAhRED,EAAAlC,UAAAoC,IAAA,SAAIC,GACF,KAAoB,IAAhBtC,KAAKW,QAAgB2B,EAAW,GAAKA,GAAYtC,KAAKW,QAA1D,CAMA,QAFI4B,EAAUvC,KAAKwC,KAEVC,EAAQ,EAAGA,EAAQH,EAAUG,IACpCF,EAAUA,EAAQG,KAGpB,OAAOH,EAAQI,QAGjBR,EAAAlC,UAAA2C,IAAA,SAAID,EAAUL,GACZ,QADY,IAAAA,IAAAA,EAAmBtC,KAAKW,QAChC2B,EAAW,GAAKA,EAAWtC,KAAKW,OAClC,MAAM,IAAIS,MAAM,mCAIZyB,EAAY,CAChBF,MAAKA,EACLD,UAAMI,EACNC,cAAUD,GAGZ,GAAoB,IAAhB9C,KAAKW,OACPX,KAAKwC,KAAOK,EACZ7C,KAAKgD,KAAOH,EACZ7C,KAAKuC,QAAUM,OAEf,GAAiB,IAAbP,EAEFO,EAAKH,KAAO1C,KAAKwC,KACjBxC,KAAKwC,KAAKO,SAAWF,EACrB7C,KAAKwC,KAAOK,OACP,GAAIP,IAAatC,KAAKW,OAE3BX,KAAKgD,KAAKN,KAAOG,EACjBA,EAAKE,SAAW/C,KAAKgD,KACrBhD,KAAKgD,KAAOH,MACP,KAECI,EAAsBjD,KAAKkD,QAAQZ,EAAW,GAC9Ca,EAAkBF,EAAoBP,KAE5CO,EAAoBP,KAAOG,EAC3BM,EAAgBJ,SAAWF,EAE3BA,EAAKE,SAAWE,EAChBJ,EAAKH,KAAOS,EAGhBnD,KAAKW,SACLX,KAAKoD,qCAGPjB,EAAAlC,UAAAoD,OAAA,SAAOf,GACL,QADK,IAAAA,IAAAA,EAAA,GACe,IAAhBtC,KAAKW,QAAgB2B,EAAW,GAAKA,GAAYtC,KAAKW,OACxD,MAAM,IAAIS,MAAM,+BAGlB,GAAiB,IAAbkB,EAEFtC,KAAKwC,KAAOxC,KAAKwC,KAAKE,KAElB1C,KAAKwC,KAEPxC,KAAKwC,KAAKO,cAAWD,EAGrB9C,KAAKgD,UAAOF,OAET,GAAIR,IAAatC,KAAKW,OAAS,EAEpCX,KAAKgD,KAAOhD,KAAKgD,KAAKD,SACtB/C,KAAKgD,KAAKN,UAAOI,MACZ,KAECQ,EAActD,KAAKkD,QAAQZ,GACjCgB,EAAYZ,KAAKK,SAAWO,EAAYP,SACxCO,EAAYP,SAASL,KAAOY,EAAYZ,KAG1C1C,KAAKW,SACLX,KAAKoD,qCAGPjB,EAAAlC,UAAAsD,IAAA,SAAIjB,EAAkBK,GACpB,GAAoB,IAAhB3C,KAAKW,QAAgB2B,EAAW,GAAKA,GAAYtC,KAAKW,OACxD,MAAM,IAAIS,MAAM,+BAGLpB,KAAKkD,QAAQZ,GACrBK,MAAQA,EACb3C,KAAKoD,qCAGPjB,EAAAlC,UAAAuD,QAAA,WACE,OAAOxD,KAAKoC,SAIdD,EAAAlC,UAAAwD,QAAA,SAAQC,GAIN,QAHInB,EAAUvC,KAAKwC,KAEbmB,EAAgB,GACblB,EAAQ,EAAGA,EAAQzC,KAAKW,OAAQ8B,IACnCiB,EAAGnB,EAAQI,MAAOF,IACpBkB,EAAOC,KAAK,CAACnB,MAAKA,EAAEE,MAAOJ,EAAQI,QAErCJ,EAAUA,EAAQG,KAGpB,OAAOiB,GAITxB,EAAAlC,UAAA2D,KAAA,eAAA,IAAAC,EAAA7D,KAAK8D,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAArD,OAAAoD,IAAAD,EAAAC,GAAAC,UAAAD,GAMH,OAJAD,EAAKG,SAAO,SAAEC,GACZL,EAAKjB,IAAIsB,MAGJlE,KAAKW,QAGdwB,EAAAlC,UAAAkE,IAAA,WACE,GAAoB,IAAhBnE,KAAKW,OAAT,KAGMyD,EAAOpE,KAAKgD,KAGlB,OAFAhD,KAAKqD,OAAOrD,KAAKW,OAAS,GAEnByD,EAAKzB,QAGdR,EAAAlC,UAAAoE,QAAA,eAAA,IAAAR,EAAA7D,KAAQ8D,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAArD,OAAAoD,IAAAD,EAAAC,GAAAC,UAAAD,GAON,OANAD,EAAKQ,UAELR,EAAKG,SAAO,SAAEC,GACZL,EAAKjB,IAAIsB,EAAK,MAGTlE,KAAKW,QAGdwB,EAAAlC,UAAAsE,MAAA,WACE,GAAoB,IAAhBvE,KAAKW,OAAT,KAGM6D,EAAWxE,KAAKwC,KAAKG,MAG3B,OAFA3C,KAAKqD,SAEEmB,IAITrC,EAAAlC,UAAAgE,QAAA,SAAQP,GAEN,QADInB,EAAUvC,KAAKwC,KACVC,EAAQ,EAAGA,EAAQzC,KAAKW,OAAQ8B,IACvCiB,EAAGnB,EAAQI,MAAOF,GAClBF,EAAUA,EAAQG,MAItBP,EAAAlC,UAAAwE,QAAA,SAAQ9B,GAIN,QAHIJ,EAAUvC,KAAKwC,KACfF,EAAW,EAENG,EAAQ,EAAGA,EAAQzC,KAAKW,OAAQ8B,IAAS,CAChD,GAAIF,EAAQI,QAAUA,EAAO,CAC3BL,EAAWG,EACX,MAEFF,EAAUA,EAAQG,KAGpB,OAAOJ,GAITH,EAAAlC,UAAAyE,KAAA,SAAKhB,GAGH,QAFInB,EAAUvC,KAAKwC,KACfmB,GAAS,EACNpB,IAAYoB,GAAQ,CACzB,GAAID,EAAGnB,EAAQI,OAAQ,CACrBgB,GAAS,EACT,MAEFpB,EAAUA,EAAQG,KAGpB,OAAOiB,GAITxB,EAAAlC,UAAA0E,MAAA,SAAMjB,GAGJ,QAFInB,EAAUvC,KAAKwC,KACfmB,GAAS,EACNpB,GAAWoB,GACXD,EAAGnB,EAAQI,SACdgB,GAAS,GAEXpB,EAAUA,EAAQG,KAGpB,OAAOiB,GAGTxB,EAAAlC,UAAA2E,SAAA,WACE,MAAO,iBAITzC,EAAAlC,UAAA4E,KAAA,SAAKnB,GAGH,QADIC,EADApB,EAAUvC,KAAKwC,KAEVC,EAAQ,EAAGA,EAAQzC,KAAKW,OAAQ8B,IAAS,CAChD,GAAIiB,EAAGnB,EAAQI,MAAOF,GAAQ,CAC5BkB,EAASpB,EAAQI,MACjB,MAEFJ,EAAUA,EAAQG,KAGpB,OAAOiB,GAITxB,EAAAlC,UAAA6E,UAAA,SAAUpB,GAGR,QADIC,EADApB,EAAUvC,KAAKwC,KAEVC,EAAQ,EAAGA,EAAQzC,KAAKW,OAAQ8B,IAAS,CAChD,GAAIiB,EAAGnB,EAAQI,MAAOF,GAAQ,CAC5BkB,EAASlB,EACT,MAEFF,EAAUA,EAAQG,KAGpB,OAAOiB,GAICxB,EAAAlC,UAAAiD,QAAV,SAAkBZ,GAChB,GAAoB,IAAhBtC,KAAKW,QAAgB2B,EAAW,GAAKA,GAAYtC,KAAKW,OACxD,MAAM,IAAIS,MAAM,+BAKlB,QAFImB,EAAUvC,KAAKwC,KAEVC,EAAQ,EAAGA,EAAQH,EAAUG,IACpCF,EAAUA,EAAQG,KAGpB,OAAOH,GAGCJ,EAAAlC,UAAAmD,kCAAV,WAKE,QAHM2B,EAAkB,GACpBxC,EAAUvC,KAAKwC,KAEZD,GACLwC,EAASnB,KAAKrB,EAAQI,OACtBJ,EAAUA,EAAQG,KAEpB1C,KAAKoC,QAAU2C,GAInB5C,sBCxRA,SAAA6C,KAqBA,OAnBSA,EAAAC,OAAP,SAAcC,GAEYA,EAAQC,cAK3BH,EAAAI,UAAP,SAAiBC,OAIXC,EAAOD,EAAKE,cAAcC,YAM9B,OAJKF,GAASA,EAAKG,SACjBH,EAAO/D,GAGF+D,EAAKI,iBAAiBL,IAEjCL,KCtBMW,EAA4C,GAC5CC,EAA8B,oBAAZC,WAA6B,SAAUA,mCCA/D,SAAyBC,GAIvB,OAAA,SAAgCC,EAAaC,OACrCC,EAAO,MAAMD,EAAW,QAC9BE,OAAOC,eAAeJ,EAAQC,EAAa,CAEzC3D,IAAA,WACE,OAAOrC,KAAKiG,IAGd1C,IAAA,SAAIZ,OACIyD,EAAYpG,KAAKiG,GACvBjG,KAAKiG,GAAQtD,EACTyD,IAAczD,GAAS3C,KAAKgG,EAdxB,WAeNhG,KAAKgG,EAfC,UAeoBK,KAAK1D,mDLQzC,WACE,YAAsB,IAAXpB,SAImB,IAAnBA,EAAO+E,QACZjF,EACwB,QAAnBA,EAIiB,SAF1BA,EA/BJ,WACE,GAAwB,oBAAbG,SACT,OAAO,SAEH+E,EAAS/E,SAASgF,cAAc,QACtCD,EAAOE,UAAY,kBACnBjF,SAASkF,KAAKC,YAAYJ,GAC1BA,EAAOK,UAAUhE,IAAI,cACfiE,EAAON,EAAOO,wBAEpB,OADAtF,SAASkF,KAAKK,YAAYR,GACrBM,GAIe,IAAbA,EAAKG,IAAY,MAHf,MAoBUC,IAKO,QAAnB1F,EAAO+E,6BDkBhB,SAAiCY,EAEAnB,EACAxF,EACA4G,EACAC,EACAC,OACzBzG,EAAiBN,EAAcC,GAE/B+G,EAAmB,GAEzB,OAA8B,IAA1B1G,EAAeD,QAAgBC,EAAe,GAAGV,WAC5CqH,SAAStH,WAGlBW,EAAeqD,SAAO,SAAElD,GAClBA,EAAQjB,OAASiB,EAAQhB,MAM7BuH,EAAU1D,KACRsD,EAASM,OAAOzB,EAAQhF,EAAQjB,KAAMqH,GACtCD,EAASM,OAAOzB,EAAQhF,EAAQhB,MAAOqH,IAPvCE,EAAU1D,KAAKsD,EAASM,OAAOzB,EAAQhF,EAAQjB,KAAMuH,OAWzD,WACEC,EAAUrD,SAAO,SAAEwD,GAA4B,OAAAA,+BAInD,SAAmCP,EACAQ,OAC3B9G,EAAiBN,EAAcoH,EAAQnH,UACvCwF,EAAS2B,EAAQ3B,OAEvB,GAA8B,IAA1BnF,EAAeD,QAAgBC,EAAe,GAAGV,WACnD,OAAOqH,SAAStH,cAKZqH,EAAmB,GAGnBK,EAA4B,GAC5BC,EAAY,WAEhBD,EAAc1D,SAAO,SAAEP,GAAiB,OAAA4D,EAAU1D,KAAKF,QAEvDiE,EAAchH,OAAS,GAmBzB,OAfAC,EAAeqD,SAAO,SAAElD,OAChB8G,EAAY9G,EAAQjB,OAASiB,EAAQhB,MACrCoH,EAASU,EAAYH,EAAQI,OAASJ,EAAQK,KAE/CF,GACHF,EAAc/D,MAAI,WAChB,OAAAsD,EAASM,OAAOzB,EAAQhF,EAAQhB,MAAO2H,EAAQM,SAInDV,EAAU1D,KACRsD,EAASM,OAAOzB,EAAQhF,EAAQjB,MAAI,WAAQ,OAAAqH,EAAOS,UAIvD,WACEN,EAAUrD,SAAO,SAAEwD,GAA4B,OAAAA,8CA0BnD,SAAiCP,EACAQ,GAC/B,OAAKA,EAAQO,WAINf,EAASM,OAAO,WAAY,aAAW,SAAGU,GAC3CR,EAAQ3B,QAAU2B,EAAQ3B,OAAOoC,SAASD,EAAMnC,SAIlD2B,EAAQU,SACRV,EAAQU,QAAQ1D,MAAI,SAACqB,GAAU,OAAAA,EAAOoC,SAASD,EAAMnC,YAKvD2B,EAAQM,UAdDT,SAAStH,kCAzBpB,SAAqCiH,EACAQ,GACnC,OAAKA,EAAQW,aAKNnB,EAASM,OAAO,WAAY,SAAO,SAAGU,GACvCR,EAAQ3B,QAAU2B,EAAQ3B,OAAOoC,SAASD,EAAMnC,SAIlD2B,EAAQU,SACRV,EAAQU,QAAQ1D,MAAI,SAACqB,GAAU,OAAAA,EAAOoC,SAASD,EAAMnC,YAKvD2B,EAAQM,UAfDT,SAAStH,sBCpHpB,SAAyBqI,GACvBjH,EAAiBiH,cIlBnB,SAAyBC,IAClBC,EAAAA,aAAe5C,GAAY2C,KAAO5C,IAIvCA,EAAc4C,IAAO,EAErB1C,QAAQ4C,KAAKF","sourcesContent":["/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\n\n/* tslint:disable-next-line: no-any */\nexport type BsEventCallback = (event?: any) => boolean | void;\n\nexport interface ListenOptions {\n  target?: HTMLElement;\n  targets?: HTMLElement[];\n  triggers?: string;\n  outsideClick?: boolean;\n  outsideEsc?: boolean;\n  show?: BsEventCallback;\n  hide?: BsEventCallback;\n  toggle?: BsEventCallback;\n}\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\n/* tslint:disable-next-line: no-any */\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 /* tslint:disable-next-line: no-any */\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  /* tslint:disable-next-line: no-any */\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  /* tslint:disable-next-line: no-any */\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  /* tslint:disable-next-line: no-any */\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return undefined;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return undefined;\n    }\n\n    options.hide();\n  });\n}\n\nexport function registerEscClick(renderer: Renderer2,\n                                 options: ListenOptions) {\n  if (!options.outsideEsc) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'keyup.esc', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return undefined;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return undefined;\n    }\n\n    options.hide();\n  });\n}\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nconst win = (typeof window !== 'undefined' && window) || {} as any;\n\nexport { win as window };\nexport const document = win.document;\nexport const location = win.location;\nexport const gc = win.gc ? () => win.gc() : (): any => null;\nexport const performance = win.performance ? win.performance : null;\nexport const Event = win.Event;\nexport const MouseEvent = win.MouseEvent;\nexport const KeyboardEvent = win.KeyboardEvent;\nexport const EventTarget = win.EventTarget;\nexport const History = win.History;\nexport const Location = win.Location;\nexport const EventListener = win.EventListener;\n","export class LinkedList<T> {\n  length = 0;\n  /* tslint:disable-next-line: no-any*/\n  protected head: any;\n  /* tslint:disable-next-line: no-any*/\n  protected tail: any;\n  /* tslint:disable-next-line: no-any*/\n  protected current: any;\n  protected asArray: T[] = [];\n\n  get(position: number): T {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      return void 0;\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n\n    return current.value;\n  }\n\n  add(value: T, position: number = this.length): void {\n    if (position < 0 || position > this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    /* tslint:disable-next-line: no-any*/\n    const node: any = {\n      value,\n      next: undefined,\n      previous: undefined\n    };\n\n    if (this.length === 0) {\n      this.head = node;\n      this.tail = node;\n      this.current = node;\n    } else {\n      if (position === 0) {\n        // first node\n        node.next = this.head;\n        this.head.previous = node;\n        this.head = node;\n      } else if (position === this.length) {\n        // last node\n        this.tail.next = node;\n        node.previous = this.tail;\n        this.tail = node;\n      } else {\n        // node in middle\n        const currentPreviousNode = this.getNode(position - 1);\n        const currentNextNode = currentPreviousNode.next;\n\n        currentPreviousNode.next = node;\n        currentNextNode.previous = node;\n\n        node.previous = currentPreviousNode;\n        node.next = currentNextNode;\n      }\n    }\n    this.length++;\n    this.createInternalArrayRepresentation();\n  }\n\n  remove(position = 0): void {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    if (position === 0) {\n      // first node\n      this.head = this.head.next;\n\n      if (this.head) {\n        // there is no second node\n        this.head.previous = undefined;\n      } else {\n        // there is no second node\n        this.tail = undefined;\n      }\n    } else if (position === this.length - 1) {\n      // last node\n      this.tail = this.tail.previous;\n      this.tail.next = undefined;\n    } else {\n      // middle node\n      const removedNode = this.getNode(position);\n      removedNode.next.previous = removedNode.previous;\n      removedNode.previous.next = removedNode.next;\n    }\n\n    this.length--;\n    this.createInternalArrayRepresentation();\n  }\n\n  set(position: number, value: T): void {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = this.getNode(position);\n    node.value = value;\n    this.createInternalArrayRepresentation();\n  }\n\n  toArray(): T[] {\n    return this.asArray;\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  findAll(fn: any): any[] {\n    let current = this.head;\n    /* tslint:disable-next-line: no-any*/\n    const result: any[] = [];\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result.push({index, value: current.value});\n      }\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  // Array methods overriding start\n  push(...args: T[]): number {\n    /* tslint:disable-next-line: no-any*/\n    args.forEach((arg: any) => {\n      this.add(arg);\n    });\n\n    return this.length;\n  }\n\n  pop(): T {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const last = this.tail;\n    this.remove(this.length - 1);\n\n    return last.value;\n  }\n\n  unshift(...args: T[]): number {\n    args.reverse();\n    /* tslint:disable-next-line: no-any*/\n    args.forEach((arg: any) => {\n      this.add(arg, 0);\n    });\n\n    return this.length;\n  }\n\n  shift(): T {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const lastItem = this.head.value;\n    this.remove();\n\n    return lastItem;\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  forEach(fn: any): void {\n    let current = this.head;\n    for (let index = 0; index < this.length; index++) {\n      fn(current.value, index);\n      current = current.next;\n    }\n  }\n\n  indexOf(value: T): number {\n    let current = this.head;\n    let position = 0;\n\n    for (let index = 0; index < this.length; index++) {\n      if (current.value === value) {\n        position = index;\n        break;\n      }\n      current = current.next;\n    }\n\n    return position;\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  some(fn: any): boolean {\n    let current = this.head;\n    let result = false;\n    while (current && !result) {\n      if (fn(current.value)) {\n        result = true;\n        break;\n      }\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  every(fn: any): boolean {\n    let current = this.head;\n    let result = true;\n    while (current && result) {\n      if (!fn(current.value)) {\n        result = false;\n      }\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  toString(): string {\n    return '[Linked List]';\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  find(fn: any): T {\n    let current = this.head;\n    let result: T;\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = current.value;\n        break;\n      }\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  findIndex(fn: any): number {\n    let current = this.head;\n    let result: number;\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = index;\n        break;\n      }\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  /* tslint:disable-next-line: no-any*/\n  protected getNode(position: number): any {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n\n    return current;\n  }\n\n  protected createInternalArrayRepresentation(): void {\n    /* tslint:disable-next-line: no-any*/\n    const outArray: any[] = [];\n    let current = this.head;\n\n    while (current) {\n      outArray.push(current.value);\n      current = current.next;\n    }\n    this.asArray = outArray;\n  }\n\n  // Array methods overriding END\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  /* tslint:disable-next-line: no-any */\n  static reflow(element: any): void {\n    /* tslint:disable-next-line: no-any */\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  /* tslint:disable-next-line: no-any */\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","/*tslint:disable:no-invalid-this */\n/* tslint:disable-next-line: no-any */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  /* tslint:disable-next-line: no-any */\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      /* tslint:disable-next-line: no-any */\n      get(): any {\n        return this[_key];\n      },\n      /* tslint:disable-next-line: no-any */\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n"]}