{"version":3,"file":"ngx-bootstrap-positioning.js","sources":["ngx-bootstrap/positioning/utils/getStyleComputedProperty.ts","ngx-bootstrap/positioning/utils/getParentNode.ts","ngx-bootstrap/positioning/utils/getScrollParent.ts","ngx-bootstrap/positioning/utils/isBrowser.ts","ngx-bootstrap/positioning/utils/isIE.ts","ngx-bootstrap/positioning/utils/getOffsetParent.ts","ngx-bootstrap/positioning/utils/isOffsetContainer.ts","ngx-bootstrap/positioning/utils/getRoot.ts","ngx-bootstrap/positioning/utils/findCommonOffsetParent.ts","ngx-bootstrap/positioning/utils/getBordersSize.ts","ngx-bootstrap/positioning/utils/getWindowSizes.ts","ngx-bootstrap/positioning/utils/getScroll.ts","ngx-bootstrap/positioning/utils/getClientRect.ts","ngx-bootstrap/positioning/utils/getBoundingClientRect.ts","ngx-bootstrap/positioning/utils/includeScroll.ts","ngx-bootstrap/positioning/utils/getOffsetRectRelativeToArbitraryNode.ts","ngx-bootstrap/positioning/utils/getViewportOffsetRectRelativeToArtbitraryNode.ts","ngx-bootstrap/positioning/utils/isFixed.ts","ngx-bootstrap/positioning/utils/getFixedPositionOffsetParent.ts","ngx-bootstrap/positioning/utils/getBoundaries.ts","ngx-bootstrap/positioning/utils/computeAutoPlacement.ts","ngx-bootstrap/positioning/utils/getOffsets.ts","ngx-bootstrap/positioning/utils/getOppositePlacement.ts","ngx-bootstrap/positioning/utils/getOppositeVariation.ts","ngx-bootstrap/positioning/utils/getOuterSizes.ts","ngx-bootstrap/positioning/utils/getReferenceOffsets.ts","ngx-bootstrap/positioning/utils/getTargetOffsets.ts","ngx-bootstrap/positioning/utils/isModifierEnabled.ts","ngx-bootstrap/positioning/utils/isNumeric.ts","ngx-bootstrap/positioning/utils/updateContainerClass.ts","ngx-bootstrap/positioning/utils/setStyles.ts","ngx-bootstrap/positioning/modifiers/arrow.ts","ngx-bootstrap/positioning/modifiers/flip.ts","ngx-bootstrap/positioning/modifiers/initData.ts","ngx-bootstrap/positioning/modifiers/preventOverflow.ts","ngx-bootstrap/positioning/modifiers/shift.ts","ngx-bootstrap/positioning/ng-positioning.ts","ngx-bootstrap/positioning/positioning.service.ts"],"names":["runIsIE"],"mappings":"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","sourcesContent":["/**\n * Get CSS computed property of the given element\n */\nexport function getStyleComputedProperty(element: HTMLElement, property?: string): any {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n\n  return property ? css[property as any] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n */\nexport function getParentNode(element: any): any {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n","/**\n * Returns the scrolling parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function getScrollParent(element: any): any {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n    default:\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n","/**\n * Determines if the browser is Internet Explorer\n */\nimport { isBrowser } from './isBrowser';\n\nconst isIE11 = isBrowser && !!((window as any).MSInputMethodContext && (document as any).documentMode);\nconst isIE10 = isBrowser && !!((window as any).MSInputMethodContext && /MSIE 10/.test((navigator as any).userAgent));\n\nexport function isIE(version?: number) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n","/**\n * Returns the offset parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getOffsetParent(element: any): any {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n\n  // Skip hidden elements which don't have an offsetParent\n  let sibling: HTMLElement | null;\n\n  while (offsetParent === noOffsetParent\n         && element.nextElementSibling\n         && sibling !== element.nextElementSibling) {\n\n      sibling = element.nextElementSibling;\n      offsetParent = sibling.offsetParent;\n    }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import { getOffsetParent } from './getOffsetParent';\n\nexport function isOffsetContainer(element: any) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n */\nexport function getRoot(node: Node): any {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Finds the offset parent common to the two provided nodes\n */\nimport { isOffsetContainer } from './isOffsetContainer';\nimport { getRoot } from './getRoot';\nimport { getOffsetParent } from './getOffsetParent';\n\nexport function findCommonOffsetParent(element1: HTMLElement, element2: HTMLElement): any {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  /* tslint:disable-next-line: no-bitwise */\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Helper to detect borders of a given element\n */\n\nexport function getBordersSize(styles: CSSStyleDeclaration, axis: string) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width` as any]) +\n    parseFloat(styles[`border${sideB}Width` as any])\n  );\n}\n","import { isIE } from './isIE';\n\nfunction getSize(axis: string, body: HTMLElement, html: HTMLElement, computedStyle: CSSStyleDeclaration) {\n  return Math.max(\n    (body as any)[`offset${axis}`],\n    (body as any)[`scroll${axis}`],\n    (html as any)[`client${axis}`],\n    (html as any)[`offset${axis}`],\n    (html as any)[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt((html as any)[`offset${axis}`], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}` as any], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}` as any], 10))\n    : 0\n  );\n}\n\nexport function getWindowSizes(document: Document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n */\nexport function getScroll(element: HTMLElement, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n */\nimport { Offsets } from '../models';\n\nexport function getClientRect(offsets: Offsets): Offsets {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  };\n}\n","/**\n * Get bounding client rect of given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getBordersSize } from './getBordersSize';\nimport { getWindowSizes } from './getWindowSizes';\nimport { getScroll } from './getScroll';\nimport { getClientRect } from './getClientRect';\nimport { isIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getBoundingClientRect(element: HTMLElement): Offsets {\n  let rect: any = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {\n    return undefined;\n  }\n\n  const result: any = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes: any = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","/**\n * Sum or subtract the element scroll values (left and top) from a given rect object\n */\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function includeScroll(rect: Offsets, element: HTMLElement, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n\n  return rect;\n}\n","import { getBoundingClientRect } from './getBoundingClientRect';\nimport { getClientRect } from './getClientRect';\nimport { getScrollParent } from './getScrollParent';\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { includeScroll } from './includeScroll';\nimport { isIE as runIsIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getOffsetRectRelativeToArbitraryNode(\n  children: HTMLElement,\n  parent: HTMLElement,\n  fixedPosition = false\n): Offsets {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect: any = getBoundingClientRect(children);\n  const parentRect: any = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  let offsets: Offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import { getClientRect } from './getClientRect';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function getViewportOffsetRectRelativeToArtbitraryNode(element: HTMLElement, excludeScroll = false): Offsets {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - Number(relativeOffset.top) + Number(relativeOffset.marginTop),\n    left: scrollLeft - Number(relativeOffset.left) + Number(relativeOffset.marginLeft),\n    width,\n    height\n  };\n\n  return getClientRect(offset);\n}\n","/**\n * Check if the given element is fixed or is inside a fixed parent\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function isFixed(element: HTMLElement): boolean {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n","/**\n * Finds the first parent of an element that has a transformed property defined\n */\n\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getFixedPositionOffsetParent(element: HTMLElement): HTMLElement {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n   return document.documentElement;\n  }\n\n  let el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n","/**\n * Computed the boundaries limits and return them\n */\nimport { getScrollParent } from './getScrollParent';\nimport { getParentNode } from './getParentNode';\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getViewportOffsetRectRelativeToArtbitraryNode } from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport { getWindowSizes } from './getWindowSizes';\nimport { isFixed } from './isFixed';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\n\nexport function getBoundaries(\n  target: HTMLElement,\n  host: HTMLElement,\n  padding = 0,\n  boundariesElement: string,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries: any = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(host));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = target.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = target.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(target.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = Number(height) + Number(offsets.top);\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = Number(width) + Number(offsets.left);\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n */\nimport { getBoundaries } from './getBoundaries';\nimport { Offsets } from '../models';\n\nfunction getArea({ width, height }: { [key: string]: number }) {\n  return width * height;\n}\n\nexport function computeAutoPlacement(\n  placement: string,\n  refRect: Offsets,\n  target: HTMLElement,\n  host: HTMLElement,\n  allowedPositions: any[] = ['top', 'bottom', 'right', 'left'],\n  boundariesElement = 'viewport',\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(target, host, padding, boundariesElement);\n\n  const rects: any = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key])\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  let filteredAreas: any[] = sortedAreas.filter(\n    ({ width, height }) => {\n      return width >= target.clientWidth\n        && height >= target.clientHeight;\n    }\n  );\n\n  filteredAreas = filteredAreas.filter((position: any) => {\n    return allowedPositions\n      .some((allowedPosition: string) => {\n        return allowedPosition === position.key;\n      });\n  });\n\n  const computedPlacement: string = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split(' ')[1];\n\n  // for tooltip on auto position\n  target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${computedPlacement}`);\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import { Data, Offsets } from '../models';\n\nexport function getOffsets(data: Data): Offsets {\n  return {\n    width: data.offsets.target.width,\n    height: data.offsets.target.height,\n    left: Math.floor(data.offsets.target.left),\n    top: Math.round(data.offsets.target.top),\n    bottom: Math.round(data.offsets.target.bottom),\n    right: Math.floor(data.offsets.target.right)\n  };\n}\n","/**\n * Get the opposite placement of the given one\n */\nexport function getOppositePlacement(placement: string) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\n  return placement.replace(/left|right|bottom|top/g, matched => (hash as any)[matched]);\n}\n","/**\n * Get the opposite placement variation of the given one\n */\nexport function getOppositeVariation(variation: string) {\n  if (variation === 'right') {\n    return 'left';\n  } else if (variation === 'left') {\n    return 'right';\n  }\n\n  return variation;\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n */\nexport function getOuterSizes(element: any) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n\n  return {\n    width: Number(element.offsetWidth) + y,\n    height: Number(element.offsetHeight) + x\n  };\n}\n","/**\n * Get offsets to the reference element\n */\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\nimport { Offsets } from '../models';\n\nexport function getReferenceOffsets(\n  target: HTMLElement,\n  host: HTMLElement,\n  fixedPosition: boolean = null\n): Offsets {\n  const commonOffsetParent = fixedPosition\n    ? getFixedPositionOffsetParent(target)\n    : findCommonOffsetParent(target, host);\n\n  return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get offsets to the target\n */\nimport { getOppositePlacement } from './getOppositePlacement';\nimport { getOuterSizes } from './getOuterSizes';\nimport { Offsets } from '../models';\n\nexport function getTargetOffsets(\n  target: HTMLElement,\n  hostOffsets: Offsets,\n  position: string\n): Offsets {\n  const placement = position.split(' ')[0];\n\n  // Get target node sizes\n  const targetRect = getOuterSizes(target);\n\n  // Add position, width and height to our offsets object\n  const targetOffsets = {\n    width: targetRect.width,\n    height: targetRect.height\n  };\n\n  // depending by the target placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  (targetOffsets as any)[mainSide] =\n    hostOffsets[mainSide] +\n    hostOffsets[measurement] / 2 -\n    targetRect[measurement] / 2;\n\n  (targetOffsets as any)[secondarySide] = placement === secondarySide\n    ? hostOffsets[secondarySide] - targetRect[secondaryMeasurement]\n    : (hostOffsets as any)[getOppositePlacement(secondarySide)];\n\n  return targetOffsets;\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n */\nexport function isModifierEnabled(options: any, modifierName: string) {\n  return options\n    && options.modifiers\n    && options.modifiers[modifierName]\n    && options.modifiers[modifierName].enabled;\n}\n","/**\n * Tells if a given input is a number\n */\nexport function isNumeric(n: any) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","/**\n * Update class for the given popper\n */\nimport { Renderer2 } from '@angular/core';\nimport { Data } from '../models';\n\nexport function updateContainerClass(data: Data, renderer?: Renderer2): void {\n  const target = data.instance.target;\n\n  let containerClass = target.className;\n\n  if (data.placementAuto) {\n    containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\n    containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\n    containerClass = containerClass.replace(/\\sauto/g, ` ${data.placement}`);\n\n    if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n      containerClass += ' popover-auto';\n    }\n\n    if (containerClass.indexOf('tooltip') !== -1  && containerClass.indexOf('tooltip-auto') === -1) {\n      containerClass += ' tooltip-auto';\n    }\n  }\n\n  containerClass = containerClass.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\n\n  if (renderer) {\n    renderer.setAttribute(target, 'class', containerClass);\n\n    return;\n  }\n\n  target.className = containerClass;\n}\n","/**\n * Set the style to the given popper\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { isNumeric } from './isNumeric';\n\nexport function setStyles(element: HTMLElement, styles: any, renderer?: Renderer2) {\n  Object.keys(styles).forEach((prop: any) => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 &&\n      isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    if (renderer) {\n      renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n\n      return;\n    }\n\n    element.style[prop] = String(styles[prop]) + unit;\n  });\n}\n","import { getClientRect, getOuterSizes, getStyleComputedProperty } from '../utils';\nimport { Data } from '../models';\n\nexport function arrow(data: Data) {\n  let targetOffsets = data.offsets.target;\n  // if arrowElement is a string, suppose it's a CSS selector\n  const arrowElement: HTMLElement | null = data.instance.target.querySelector('.arrow');\n\n  // if arrowElement is not found, don't run the modifier\n  if (!arrowElement) {\n    return data;\n  }\n\n  const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n  const placementVariation = data.placement.split(' ')[1];\n\n  // top/left side\n  if (data.offsets.host[opSide] - arrowElementSize < (targetOffsets as any)[side]) {\n    (targetOffsets as any)[side] -=\n      (targetOffsets as any)[side] - (data.offsets.host[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (Number((data as any).offsets.host[side]) + Number(arrowElementSize) > (targetOffsets as any)[opSide]) {\n    (targetOffsets as any)[side] +=\n      Number((data as any).offsets.host[side]) + Number(arrowElementSize) - Number((targetOffsets as any)[opSide]);\n  }\n  targetOffsets = getClientRect(targetOffsets);\n\n  // Compute the sideValue using the updated target offsets\n  // take target margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.target);\n  const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n\n  // compute center of the target\n  let center: number;\n  if (!placementVariation) {\n    center = Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n  } else {\n    const targetBorderRadius = parseFloat(css.borderRadius);\n    const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n    center = side === placementVariation ?\n      Number((data as any).offsets.host[side]) + targetSideArrowOffset :\n      Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n  }\n\n  let sideValue =\n    center - (targetOffsets as any)[side] - targetMarginSide - targetBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its target\n  sideValue = Math.max(Math.min(targetOffsets[len] - arrowElementSize, sideValue), 0);\n\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  data.instance.arrow = arrowElement;\n\n  return data;\n}\n","import {\n  computeAutoPlacement,\n  getBoundaries,\n  getClientRect,\n  getOppositeVariation,\n  getTargetOffsets,\n  isModifierEnabled\n} from '../utils';\n\nimport { Data } from '../models';\n\nexport function flip(data: Data): Data {\n  data.offsets.target = getClientRect(data.offsets.target);\n\n  if (!isModifierEnabled(data.options, 'flip')) {\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...getTargetOffsets(\n        data.instance.target,\n        data.offsets.host,\n        data.placement\n      )\n    };\n\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'viewport',\n    false // positionFixed\n  );\n\n  let placement = data.placement.split(' ')[0];\n  let variation = data.placement.split(' ')[1] || '';\n\n  const offsetsHost = data.offsets.host;\n  const target = data.instance.target;\n  const host = data.instance.host;\n\n  const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n  const flipOrder = [placement, adaptivePosition];\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split(' ')[0];\n\n    // using floor because the host offsets may contain decimals we are not going to consider here\n    const overlapsRef =\n      (placement === 'left' &&\n        Math.floor(data.offsets.target.right) > Math.floor(data.offsets.host.left)) ||\n      (placement === 'right' &&\n        Math.floor(data.offsets.target.left) < Math.floor(data.offsets.host.right)) ||\n      (placement === 'top' &&\n        Math.floor(data.offsets.target.bottom) > Math.floor(data.offsets.host.top)) ||\n      (placement === 'bottom' &&\n        Math.floor(data.offsets.target.top) < Math.floor(data.offsets.host.bottom));\n\n    const overflowsLeft = Math.floor(data.offsets.target.left) < Math.floor(boundaries.left);\n    const overflowsRight = Math.floor(data.offsets.target.right) > Math.floor(boundaries.right);\n    const overflowsTop = Math.floor(data.offsets.target.top) < Math.floor(boundaries.top);\n    const overflowsBottom = Math.floor(data.offsets.target.bottom) > Math.floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      ((isVertical && variation === 'left' && overflowsLeft) ||\n        (isVertical && variation === 'right' && overflowsRight) ||\n        (!isVertical && variation === 'left' && overflowsTop) ||\n        (!isVertical && variation === 'right' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? ` ${variation}` : '');\n\n      data.offsets.target = {\n        ...data.offsets.target,\n        ...getTargetOffsets(\n          data.instance.target,\n          data.offsets.host,\n          data.placement\n        )\n      };\n    }\n  });\n\n  return data;\n}\n","import {\n  computeAutoPlacement,\n  getReferenceOffsets,\n  getTargetOffsets\n} from '../utils';\n\nimport { Data, Options } from '../models';\n\nexport function initData(\n  targetElement: HTMLElement, hostElement: HTMLElement, position: string, options: Options\n): Data {\n\n  const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n\n  if (!position.match(/^(auto)*\\s*(left|right|top|bottom)*$/)\n    && !position.match(/^(left|right|top|bottom)*(?: (left|right|top|bottom))?\\s*(start|end)*$/)) {\n      /* tslint:disable-next-line: no-parameter-reassignment */\n      position = 'auto';\n    }\n\n  const placementAuto = !!position.match(/auto/g);\n\n  // support old placements 'auto left|right|top|bottom'\n  let placement = position.match(/auto\\s(left|right|top|bottom)/)\n    ? position.split(' ')[1] || 'auto'\n    : position;\n\n  // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n  const matches = placement.match(/^(left|right|top|bottom)* ?(?!\\1)(left|right|top|bottom)?/);\n  if (matches) {\n    placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n  }\n\n  // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n  if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n    placement = 'auto';\n  }\n\n  const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n\n  placement = computeAutoPlacement(\n    placement,\n    hostElPosition,\n    targetElement,\n    hostElement,\n    options ? options.allowedPositions : undefined\n  );\n\n  return {\n    options,\n    instance: {\n      target: targetElement,\n      host: hostElement,\n      arrow: null\n    },\n    offsets: {\n      target: targetOffset,\n      host: hostElPosition,\n      arrow: null\n    },\n    positionFixed: false,\n    placement,\n    placementAuto\n  };\n}\n","import { getBoundaries, isModifierEnabled } from '../utils';\nimport { Data } from '../models';\n\nexport function preventOverflow(data: Data) {\n\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  }\n\n  // NOTE: DOM access here\n  // resets the targetOffsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'scrollParent',\n    false // positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n\n  const order = ['left', 'right', 'top', 'bottom'];\n\n  const check = {\n    primary(placement: string) {\n      let value = (data as any).offsets.target[placement];\n      if (\n        (data as any).offsets.target[placement] < boundaries[placement] &&\n        !false // options.escapeWithReference\n      ) {\n        value = Math.max((data as any).offsets.target[placement], boundaries[placement]);\n      }\n\n      return { [placement]: value };\n    },\n    secondary(placement: string) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = data.offsets.target[mainSide];\n      if (\n        (data as any).offsets.target[placement] > boundaries[placement] &&\n        !false // escapeWithReference\n      ) {\n        value = Math.min(\n          data.offsets.target[mainSide],\n          boundaries[placement] -\n          (placement === 'right' ? data.offsets.target.width : data.offsets.target.height)\n        );\n      }\n\n      return { [mainSide]: value };\n    }\n  };\n\n  let side: string;\n\n  order.forEach(placement => {\n    side = ['left', 'top']\n      .indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...(check as any)[side](placement)\n    };\n\n  });\n\n  return data;\n}\n","import { Data } from '../models';\n\nexport function shift(data: Data): Data {\n  const placement = data.placement;\n  const basePlacement = placement.split(' ')[0];\n  const shiftVariation = placement.split(' ')[1];\n\n  if (shiftVariation) {\n    const { host, target } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: host[side] },\n      end: {\n        [side]: host[side] + host[measurement] - target[measurement]\n      }\n    };\n\n    data.offsets.target = {\n      ...target, ...{\n        [side]: (side === shiftVariation ? (shiftOffsets as any).start[side] : (shiftOffsets as any).end[side])\n      }\n    };\n  }\n\n  return data;\n}\n","/**\n * @copyright Valor Software\n * @copyright Federico Zivolo and contributors\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { getOffsets, getReferenceOffsets, updateContainerClass, setStyles } from './utils';\n\nimport { arrow, flip, preventOverflow, shift, initData } from './modifiers';\nimport { Data, Offsets, Options } from './models';\n\n\nexport class Positioning {\n  position(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return this.offset(hostElement, targetElement, false);\n  }\n\n  offset(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return getReferenceOffsets(targetElement, hostElement);\n  }\n\n  positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    position: string,\n    appendToBody?: boolean,\n    options?: Options\n  ): Data {\n    const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n\n    return chainOfModifiers.reduce(\n      (modifiedData, modifier) => modifier(modifiedData),\n      initData(targetElement, hostElement, position, options)\n    );\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean,\n  options?: Options,\n  renderer?: Renderer2\n): void {\n\n  const data = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody,\n    options\n  );\n\n  const offsets = getOffsets(data);\n\n  setStyles(targetElement, {\n    'will-change': 'transform',\n    top: '0px',\n    left: '0px',\n    transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n  }, renderer);\n\n  if (data.instance.arrow) {\n    setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n  }\n\n  updateContainerClass(data, renderer);\n}\n","import { Injectable, ElementRef, RendererFactory2, Inject, PLATFORM_ID, NgZone } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { positionElements } from './ng-positioning';\n\nimport { fromEvent, merge, of, animationFrameScheduler, Subject, Observable } from 'rxjs';\nimport { Options } from './models';\n\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\n@Injectable()\nexport class PositioningService {\n  private options: Options;\n  private update$$ = new Subject<null>();\n  private positionElements = new Map();\n  private triggerEvent$: Observable<number|Event>;\n  private isDisabled = false;\n\n  constructor(\n    ngZone: NgZone,\n    rendererFactory: RendererFactory2,\n    @Inject(PLATFORM_ID) platformId: number\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n      ngZone.runOutsideAngular(() => {\n        this.triggerEvent$ = merge(\n          fromEvent(window, 'scroll', { passive: true }),\n          fromEvent(window, 'resize', { passive: true }),\n          /* tslint:disable-next-line: deprecation */\n          of(0, animationFrameScheduler),\n          this.update$$\n        );\n\n        this.triggerEvent$.subscribe(() => {\n          if (this.isDisabled) {\n            return;\n          }\n\n          this.positionElements\n          /* tslint:disable-next-line: no-any */\n            .forEach((positionElement: any) => {\n              positionElements(\n                _getHtmlElement(positionElement.target),\n                _getHtmlElement(positionElement.element),\n                positionElement.attachment,\n                positionElement.appendToBody,\n                this.options,\n                rendererFactory.createRenderer(null, null)\n              );\n            });\n        });\n      });\n    }\n  }\n\n  position(options: PositioningOptions): void {\n    this.addPositionElement(options);\n  }\n\n  get event$(): Observable<number|Event> {\n    return this.triggerEvent$;\n  }\n\n  disable(): void {\n    this.isDisabled = true;\n  }\n\n  enable(): void {\n    this.isDisabled = false;\n  }\n\n  addPositionElement(options: PositioningOptions): void {\n    this.positionElements.set(_getHtmlElement(options.element), options);\n  }\n\n  calcPosition(): void {\n    this.update$$.next();\n  }\n\n  deletePositionElement(elRef: ElementRef): void {\n    this.positionElements.delete(_getHtmlElement(elRef));\n  }\n\n  setOptions(options: Options) {\n    this.options = options;\n  }\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element;\n}\n"]}