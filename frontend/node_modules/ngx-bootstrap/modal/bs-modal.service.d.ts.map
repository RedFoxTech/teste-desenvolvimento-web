{"version":3,"file":"bs-modal.service.d.ts","sources":["bs-modal.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentRef, TemplateRef, EventEmitter, RendererFactory2 } from '@angular/core';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalOptions } from './modal-options.class';\nimport { BsModalRef } from './bs-modal-ref.service';\nexport declare class BsModalService {\n    private clf;\n    private modalDefaultOption;\n    config: ModalOptions;\n    onShow: EventEmitter<any>;\n    onShown: EventEmitter<any>;\n    onHide: EventEmitter<any>;\n    onHidden: EventEmitter<any>;\n    protected isBodyOverflowing: boolean;\n    protected originalBodyPadding: number;\n    protected scrollbarWidth: number;\n    protected backdropRef: ComponentRef<ModalBackdropComponent>;\n    private _backdropLoader;\n    private modalsCount;\n    private lastDismissReason;\n    private loaders;\n    private _renderer;\n    constructor(rendererFactory: RendererFactory2, clf: ComponentLoaderFactory, modalDefaultOption: ModalOptions);\n    /** Shows a modal */\n    show<T = Object>(content: string | TemplateRef<any> | {\n        new (...args: any[]): T;\n    }, config?: ModalOptions<T>): BsModalRef<T>;\n    hide(id?: number): void;\n    _showBackdrop(): void;\n    _hideBackdrop(): void;\n    _showModal(content: any): BsModalRef;\n    _hideModal(id?: number): void;\n    getModalsCount(): number;\n    setDismissReason(reason: string): void;\n    removeBackdrop(): void;\n    /** Checks if the body is overflowing and sets scrollbar width */\n    /** @internal */\n    checkScrollbar(): void;\n    setScrollbar(): void;\n    private resetScrollbar;\n    private getScrollbarWidth;\n    private _createLoaders;\n    private removeLoaders;\n    private copyEvent;\n}\n"]}