{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-bootstrap/positioning/utils/getStyleComputedProperty.ts","ng://ngx-bootstrap/positioning/utils/getParentNode.ts","ng://ngx-bootstrap/positioning/utils/getScrollParent.ts","ng://ngx-bootstrap/positioning/utils/isBrowser.ts","ng://ngx-bootstrap/positioning/utils/isIE.ts","ng://ngx-bootstrap/positioning/utils/getOffsetParent.ts","ng://ngx-bootstrap/positioning/utils/getRoot.ts","ng://ngx-bootstrap/positioning/utils/findCommonOffsetParent.ts","ng://ngx-bootstrap/positioning/utils/isOffsetContainer.ts","ng://ngx-bootstrap/positioning/utils/getBordersSize.ts","ng://ngx-bootstrap/positioning/utils/getWindowSizes.ts","ng://ngx-bootstrap/positioning/utils/getScroll.ts","ng://ngx-bootstrap/positioning/utils/getClientRect.ts","ng://ngx-bootstrap/positioning/utils/getBoundingClientRect.ts","ng://ngx-bootstrap/positioning/utils/getOffsetRectRelativeToArbitraryNode.ts","ng://ngx-bootstrap/positioning/utils/includeScroll.ts","ng://ngx-bootstrap/positioning/utils/getFixedPositionOffsetParent.ts","ng://ngx-bootstrap/positioning/utils/getBoundaries.ts","ng://ngx-bootstrap/positioning/utils/getViewportOffsetRectRelativeToArtbitraryNode.ts","ng://ngx-bootstrap/positioning/utils/isFixed.ts","ng://ngx-bootstrap/positioning/utils/computeAutoPlacement.ts","ng://ngx-bootstrap/positioning/utils/getOuterSizes.ts","ng://ngx-bootstrap/positioning/utils/getReferenceOffsets.ts","ng://ngx-bootstrap/positioning/utils/getTargetOffsets.ts","ng://ngx-bootstrap/positioning/utils/getOppositePlacement.ts","ng://ngx-bootstrap/positioning/utils/isModifierEnabled.ts","ng://ngx-bootstrap/positioning/utils/setStyles.ts","ng://ngx-bootstrap/positioning/utils/isNumeric.ts","ng://ngx-bootstrap/positioning/modifiers/arrow.ts","ng://ngx-bootstrap/positioning/modifiers/flip.ts","ng://ngx-bootstrap/positioning/utils/getOppositeVariation.ts","ng://ngx-bootstrap/positioning/modifiers/preventOverflow.ts","ng://ngx-bootstrap/positioning/modifiers/shift.ts","ng://ngx-bootstrap/positioning/ng-positioning.ts","ng://ngx-bootstrap/positioning/modifiers/initData.ts","ng://ngx-bootstrap/positioning/utils/getOffsets.ts","ng://ngx-bootstrap/positioning/utils/updateContainerClass.ts","ng://ngx-bootstrap/positioning/positioning.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","document","body","_a","overflow","overflowX","overflowY","test","String","isBrowser","window","isIE11","MSInputMethodContext","documentMode","isIE10","userAgent","isIE","version","getOffsetParent","documentElement","sibling","noOffsetParent","offsetParent","nextElementSibling","indexOf","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","element1root","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","html","computedStyle","Math","max","parseInt","getWindowSizes","height","width","getScroll","side","upperSide","scrollingElement","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","target","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","Number","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","computeAutoPlacement","placement","refRect","allowedPositions","rects","sortedAreas","keys","map","key","area","sort","a","b","filteredAreas","filter","computedPlacement","position","some","allowedPosition","variation","split","className","replace","getOuterSizes","x","marginBottom","y","marginRight","getReferenceOffsets","getTargetOffsets","hostOffsets","targetRect","targetOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","hash","matched","getOppositePlacement","isModifierEnabled","options","modifierName","modifiers","enabled","setStyles","renderer","forEach","prop","unit","isNaN","isFinite","setStyle","style","arrow","data","arrowElement","instance","querySelector","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","placementVariation","center","targetMarginSide","targetBorderSide","targetBorderRadius","borderRadius","targetSideArrowOffset","sideValue","min","round","flip","adaptivePosition","flipOrder","step","index","overlapsRef","floor","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","getOppositeVariation","preventOverflow","targetStyles","transform","check","primary","value","secondary","shift","basePlacement","shiftVariation","_d","shiftOffsets","_b","_c","Positioning","hostElement","targetElement","offset","positionElements","appendToBody","reduce","modifiedData","hostElPosition","match","placementAuto","matches","positionFixed","undefined","initData","positionService","getOffsets","will-change","containerClass","setAttribute","updateContainerClass","PositioningService","ngZone","rendererFactory","platformId","_this","update$$","Subject","Map","isDisabled","isPlatformBrowser","runOutsideAngular","triggerEvent$","merge","fromEvent","passive","of","animationFrameScheduler","subscribe","positionElement","_getHtmlElement","attachment","createRenderer","addPositionElement","defineProperty","disable","enable","set","calcPosition","next","deletePositionElement","elRef","delete","setOptions","Injectable","NgZone","RendererFactory2","Inject","args","PLATFORM_ID","ElementRef","nativeElement"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Get CSS computed property of the given element\n */\nexport function getStyleComputedProperty(element: HTMLElement, property?: string): any {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n\n  return property ? css[property as any] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n */\nexport function getParentNode(element: any): any {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n","/**\n * Returns the scrolling parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function getScrollParent(element: any): any {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n    default:\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n","/**\n * Determines if the browser is Internet Explorer\n */\nimport { isBrowser } from './isBrowser';\n\nconst isIE11 = isBrowser && !!((window as any).MSInputMethodContext && (document as any).documentMode);\nconst isIE10 = isBrowser && !!((window as any).MSInputMethodContext && /MSIE 10/.test((navigator as any).userAgent));\n\nexport function isIE(version?: number) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n","/**\n * Returns the offset parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getOffsetParent(element: any): any {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n\n  // Skip hidden elements which don't have an offsetParent\n  let sibling: HTMLElement | null;\n\n  while (offsetParent === noOffsetParent\n         && element.nextElementSibling\n         && sibling !== element.nextElementSibling) {\n\n      sibling = element.nextElementSibling;\n      offsetParent = sibling.offsetParent;\n    }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n */\nexport function getRoot(node: Node): any {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Finds the offset parent common to the two provided nodes\n */\nimport { isOffsetContainer } from './isOffsetContainer';\nimport { getRoot } from './getRoot';\nimport { getOffsetParent } from './getOffsetParent';\n\nexport function findCommonOffsetParent(element1: HTMLElement, element2: HTMLElement): any {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  /* tslint:disable-next-line: no-bitwise */\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import { getOffsetParent } from './getOffsetParent';\n\nexport function isOffsetContainer(element: any) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Helper to detect borders of a given element\n */\n\nexport function getBordersSize(styles: CSSStyleDeclaration, axis: string) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width` as any]) +\n    parseFloat(styles[`border${sideB}Width` as any])\n  );\n}\n","import { isIE } from './isIE';\n\nfunction getSize(axis: string, body: HTMLElement, html: HTMLElement, computedStyle: CSSStyleDeclaration) {\n  return Math.max(\n    (body as any)[`offset${axis}`],\n    (body as any)[`scroll${axis}`],\n    (html as any)[`client${axis}`],\n    (html as any)[`offset${axis}`],\n    (html as any)[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt((html as any)[`offset${axis}`], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}` as any], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}` as any], 10))\n    : 0\n  );\n}\n\nexport function getWindowSizes(document: Document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n */\nexport function getScroll(element: HTMLElement, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n */\nimport { Offsets } from '../models';\n\nexport function getClientRect(offsets: Offsets): Offsets {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  };\n}\n","/**\n * Get bounding client rect of given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getBordersSize } from './getBordersSize';\nimport { getWindowSizes } from './getWindowSizes';\nimport { getScroll } from './getScroll';\nimport { getClientRect } from './getClientRect';\nimport { isIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getBoundingClientRect(element: HTMLElement): Offsets {\n  let rect: any = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {\n    return undefined;\n  }\n\n  const result: any = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes: any = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import { getBoundingClientRect } from './getBoundingClientRect';\nimport { getClientRect } from './getClientRect';\nimport { getScrollParent } from './getScrollParent';\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { includeScroll } from './includeScroll';\nimport { isIE as runIsIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getOffsetRectRelativeToArbitraryNode(\n  children: HTMLElement,\n  parent: HTMLElement,\n  fixedPosition = false\n): Offsets {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect: any = getBoundingClientRect(children);\n  const parentRect: any = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  let offsets: Offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","/**\n * Sum or subtract the element scroll values (left and top) from a given rect object\n */\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function includeScroll(rect: Offsets, element: HTMLElement, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n\n  return rect;\n}\n","/**\n * Finds the first parent of an element that has a transformed property defined\n */\n\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getFixedPositionOffsetParent(element: HTMLElement): HTMLElement {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n   return document.documentElement;\n  }\n\n  let el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n","/**\n * Computed the boundaries limits and return them\n */\nimport { getScrollParent } from './getScrollParent';\nimport { getParentNode } from './getParentNode';\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getViewportOffsetRectRelativeToArtbitraryNode } from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport { getWindowSizes } from './getWindowSizes';\nimport { isFixed } from './isFixed';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\n\nexport function getBoundaries(\n  target: HTMLElement,\n  host: HTMLElement,\n  padding = 0,\n  boundariesElement: string,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries: any = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(host));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = target.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = target.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(target.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = Number(height) + Number(offsets.top);\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = Number(width) + Number(offsets.left);\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import { getClientRect } from './getClientRect';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function getViewportOffsetRectRelativeToArtbitraryNode(element: HTMLElement, excludeScroll = false): Offsets {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - Number(relativeOffset.top) + Number(relativeOffset.marginTop),\n    left: scrollLeft - Number(relativeOffset.left) + Number(relativeOffset.marginLeft),\n    width,\n    height\n  };\n\n  return getClientRect(offset);\n}\n","/**\n * Check if the given element is fixed or is inside a fixed parent\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function isFixed(element: HTMLElement): boolean {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n","/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n */\nimport { getBoundaries } from './getBoundaries';\nimport { Offsets } from '../models';\n\nfunction getArea({ width, height }: { [key: string]: number }) {\n  return width * height;\n}\n\nexport function computeAutoPlacement(\n  placement: string,\n  refRect: Offsets,\n  target: HTMLElement,\n  host: HTMLElement,\n  allowedPositions: any[] = ['top', 'bottom', 'right', 'left'],\n  boundariesElement = 'viewport',\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(target, host, padding, boundariesElement);\n\n  const rects: any = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key])\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  let filteredAreas: any[] = sortedAreas.filter(\n    ({ width, height }) => {\n      return width >= target.clientWidth\n        && height >= target.clientHeight;\n    }\n  );\n\n  filteredAreas = filteredAreas.filter((position: any) => {\n    return allowedPositions\n      .some((allowedPosition: string) => {\n        return allowedPosition === position.key;\n      });\n  });\n\n  const computedPlacement: string = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split(' ')[1];\n\n  // for tooltip on auto position\n  target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${computedPlacement}`);\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n */\nexport function getOuterSizes(element: any) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n\n  return {\n    width: Number(element.offsetWidth) + y,\n    height: Number(element.offsetHeight) + x\n  };\n}\n","/**\n * Get offsets to the reference element\n */\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\nimport { Offsets } from '../models';\n\nexport function getReferenceOffsets(\n  target: HTMLElement,\n  host: HTMLElement,\n  fixedPosition: boolean = null\n): Offsets {\n  const commonOffsetParent = fixedPosition\n    ? getFixedPositionOffsetParent(target)\n    : findCommonOffsetParent(target, host);\n\n  return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get offsets to the target\n */\nimport { getOppositePlacement } from './getOppositePlacement';\nimport { getOuterSizes } from './getOuterSizes';\nimport { Offsets } from '../models';\n\nexport function getTargetOffsets(\n  target: HTMLElement,\n  hostOffsets: Offsets,\n  position: string\n): Offsets {\n  const placement = position.split(' ')[0];\n\n  // Get target node sizes\n  const targetRect = getOuterSizes(target);\n\n  // Add position, width and height to our offsets object\n  const targetOffsets = {\n    width: targetRect.width,\n    height: targetRect.height\n  };\n\n  // depending by the target placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  (targetOffsets as any)[mainSide] =\n    hostOffsets[mainSide] +\n    hostOffsets[measurement] / 2 -\n    targetRect[measurement] / 2;\n\n  (targetOffsets as any)[secondarySide] = placement === secondarySide\n    ? hostOffsets[secondarySide] - targetRect[secondaryMeasurement]\n    : (hostOffsets as any)[getOppositePlacement(secondarySide)];\n\n  return targetOffsets;\n}\n","/**\n * Get the opposite placement of the given one\n */\nexport function getOppositePlacement(placement: string) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\n  return placement.replace(/left|right|bottom|top/g, matched => (hash as any)[matched]);\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n */\nexport function isModifierEnabled(options: any, modifierName: string) {\n  return options\n    && options.modifiers\n    && options.modifiers[modifierName]\n    && options.modifiers[modifierName].enabled;\n}\n","/**\n * Set the style to the given popper\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { isNumeric } from './isNumeric';\n\nexport function setStyles(element: HTMLElement, styles: any, renderer?: Renderer2) {\n  Object.keys(styles).forEach((prop: any) => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 &&\n      isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    if (renderer) {\n      renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n\n      return;\n    }\n\n    element.style[prop] = String(styles[prop]) + unit;\n  });\n}\n","/**\n * Tells if a given input is a number\n */\nexport function isNumeric(n: any) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import { getClientRect, getOuterSizes, getStyleComputedProperty } from '../utils';\nimport { Data } from '../models';\n\nexport function arrow(data: Data) {\n  let targetOffsets = data.offsets.target;\n  // if arrowElement is a string, suppose it's a CSS selector\n  const arrowElement: HTMLElement | null = data.instance.target.querySelector('.arrow');\n\n  // if arrowElement is not found, don't run the modifier\n  if (!arrowElement) {\n    return data;\n  }\n\n  const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n  const placementVariation = data.placement.split(' ')[1];\n\n  // top/left side\n  if (data.offsets.host[opSide] - arrowElementSize < (targetOffsets as any)[side]) {\n    (targetOffsets as any)[side] -=\n      (targetOffsets as any)[side] - (data.offsets.host[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (Number((data as any).offsets.host[side]) + Number(arrowElementSize) > (targetOffsets as any)[opSide]) {\n    (targetOffsets as any)[side] +=\n      Number((data as any).offsets.host[side]) + Number(arrowElementSize) - Number((targetOffsets as any)[opSide]);\n  }\n  targetOffsets = getClientRect(targetOffsets);\n\n  // Compute the sideValue using the updated target offsets\n  // take target margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.target);\n  const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n\n  // compute center of the target\n  let center: number;\n  if (!placementVariation) {\n    center = Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n  } else {\n    const targetBorderRadius = parseFloat(css.borderRadius);\n    const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n    center = side === placementVariation ?\n      Number((data as any).offsets.host[side]) + targetSideArrowOffset :\n      Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n  }\n\n  let sideValue =\n    center - (targetOffsets as any)[side] - targetMarginSide - targetBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its target\n  sideValue = Math.max(Math.min(targetOffsets[len] - arrowElementSize, sideValue), 0);\n\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  data.instance.arrow = arrowElement;\n\n  return data;\n}\n","import {\n  computeAutoPlacement,\n  getBoundaries,\n  getClientRect,\n  getOppositeVariation,\n  getTargetOffsets,\n  isModifierEnabled\n} from '../utils';\n\nimport { Data } from '../models';\n\nexport function flip(data: Data): Data {\n  data.offsets.target = getClientRect(data.offsets.target);\n\n  if (!isModifierEnabled(data.options, 'flip')) {\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...getTargetOffsets(\n        data.instance.target,\n        data.offsets.host,\n        data.placement\n      )\n    };\n\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'viewport',\n    false // positionFixed\n  );\n\n  let placement = data.placement.split(' ')[0];\n  let variation = data.placement.split(' ')[1] || '';\n\n  const offsetsHost = data.offsets.host;\n  const target = data.instance.target;\n  const host = data.instance.host;\n\n  const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n  const flipOrder = [placement, adaptivePosition];\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split(' ')[0];\n\n    // using floor because the host offsets may contain decimals we are not going to consider here\n    const overlapsRef =\n      (placement === 'left' &&\n        Math.floor(data.offsets.target.right) > Math.floor(data.offsets.host.left)) ||\n      (placement === 'right' &&\n        Math.floor(data.offsets.target.left) < Math.floor(data.offsets.host.right)) ||\n      (placement === 'top' &&\n        Math.floor(data.offsets.target.bottom) > Math.floor(data.offsets.host.top)) ||\n      (placement === 'bottom' &&\n        Math.floor(data.offsets.target.top) < Math.floor(data.offsets.host.bottom));\n\n    const overflowsLeft = Math.floor(data.offsets.target.left) < Math.floor(boundaries.left);\n    const overflowsRight = Math.floor(data.offsets.target.right) > Math.floor(boundaries.right);\n    const overflowsTop = Math.floor(data.offsets.target.top) < Math.floor(boundaries.top);\n    const overflowsBottom = Math.floor(data.offsets.target.bottom) > Math.floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      ((isVertical && variation === 'left' && overflowsLeft) ||\n        (isVertical && variation === 'right' && overflowsRight) ||\n        (!isVertical && variation === 'left' && overflowsTop) ||\n        (!isVertical && variation === 'right' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? ` ${variation}` : '');\n\n      data.offsets.target = {\n        ...data.offsets.target,\n        ...getTargetOffsets(\n          data.instance.target,\n          data.offsets.host,\n          data.placement\n        )\n      };\n    }\n  });\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n */\nexport function getOppositeVariation(variation: string) {\n  if (variation === 'right') {\n    return 'left';\n  } else if (variation === 'left') {\n    return 'right';\n  }\n\n  return variation;\n}\n","import { getBoundaries, isModifierEnabled } from '../utils';\nimport { Data } from '../models';\n\nexport function preventOverflow(data: Data) {\n\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  }\n\n  // NOTE: DOM access here\n  // resets the targetOffsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'scrollParent',\n    false // positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n\n  const order = ['left', 'right', 'top', 'bottom'];\n\n  const check = {\n    primary(placement: string) {\n      let value = (data as any).offsets.target[placement];\n      if (\n        (data as any).offsets.target[placement] < boundaries[placement] &&\n        !false // options.escapeWithReference\n      ) {\n        value = Math.max((data as any).offsets.target[placement], boundaries[placement]);\n      }\n\n      return { [placement]: value };\n    },\n    secondary(placement: string) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = data.offsets.target[mainSide];\n      if (\n        (data as any).offsets.target[placement] > boundaries[placement] &&\n        !false // escapeWithReference\n      ) {\n        value = Math.min(\n          data.offsets.target[mainSide],\n          boundaries[placement] -\n          (placement === 'right' ? data.offsets.target.width : data.offsets.target.height)\n        );\n      }\n\n      return { [mainSide]: value };\n    }\n  };\n\n  let side: string;\n\n  order.forEach(placement => {\n    side = ['left', 'top']\n      .indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...(check as any)[side](placement)\n    };\n\n  });\n\n  return data;\n}\n","import { Data } from '../models';\n\nexport function shift(data: Data): Data {\n  const placement = data.placement;\n  const basePlacement = placement.split(' ')[0];\n  const shiftVariation = placement.split(' ')[1];\n\n  if (shiftVariation) {\n    const { host, target } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: host[side] },\n      end: {\n        [side]: host[side] + host[measurement] - target[measurement]\n      }\n    };\n\n    data.offsets.target = {\n      ...target, ...{\n        [side]: (side === shiftVariation ? (shiftOffsets as any).start[side] : (shiftOffsets as any).end[side])\n      }\n    };\n  }\n\n  return data;\n}\n","/**\n * @copyright Valor Software\n * @copyright Federico Zivolo and contributors\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { getOffsets, getReferenceOffsets, updateContainerClass, setStyles } from './utils';\n\nimport { arrow, flip, preventOverflow, shift, initData } from './modifiers';\nimport { Data, Offsets, Options } from './models';\n\n\nexport class Positioning {\n  position(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return this.offset(hostElement, targetElement, false);\n  }\n\n  offset(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return getReferenceOffsets(targetElement, hostElement);\n  }\n\n  positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    position: string,\n    appendToBody?: boolean,\n    options?: Options\n  ): Data {\n    const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n\n    return chainOfModifiers.reduce(\n      (modifiedData, modifier) => modifier(modifiedData),\n      initData(targetElement, hostElement, position, options)\n    );\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean,\n  options?: Options,\n  renderer?: Renderer2\n): void {\n\n  const data = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody,\n    options\n  );\n\n  const offsets = getOffsets(data);\n\n  setStyles(targetElement, {\n    'will-change': 'transform',\n    top: '0px',\n    left: '0px',\n    transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n  }, renderer);\n\n  if (data.instance.arrow) {\n    setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n  }\n\n  updateContainerClass(data, renderer);\n}\n","import {\n  computeAutoPlacement,\n  getReferenceOffsets,\n  getTargetOffsets\n} from '../utils';\n\nimport { Data, Options } from '../models';\n\nexport function initData(\n  targetElement: HTMLElement, hostElement: HTMLElement, position: string, options: Options\n): Data {\n\n  const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n\n  if (!position.match(/^(auto)*\\s*(left|right|top|bottom)*$/)\n    && !position.match(/^(left|right|top|bottom)*(?: (left|right|top|bottom))?\\s*(start|end)*$/)) {\n      /* tslint:disable-next-line: no-parameter-reassignment */\n      position = 'auto';\n    }\n\n  const placementAuto = !!position.match(/auto/g);\n\n  // support old placements 'auto left|right|top|bottom'\n  let placement = position.match(/auto\\s(left|right|top|bottom)/)\n    ? position.split(' ')[1] || 'auto'\n    : position;\n\n  // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n  const matches = placement.match(/^(left|right|top|bottom)* ?(?!\\1)(left|right|top|bottom)?/);\n  if (matches) {\n    placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n  }\n\n  // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n  if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n    placement = 'auto';\n  }\n\n  const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n\n  placement = computeAutoPlacement(\n    placement,\n    hostElPosition,\n    targetElement,\n    hostElement,\n    options ? options.allowedPositions : undefined\n  );\n\n  return {\n    options,\n    instance: {\n      target: targetElement,\n      host: hostElement,\n      arrow: null\n    },\n    offsets: {\n      target: targetOffset,\n      host: hostElPosition,\n      arrow: null\n    },\n    positionFixed: false,\n    placement,\n    placementAuto\n  };\n}\n","import { Data, Offsets } from '../models';\n\nexport function getOffsets(data: Data): Offsets {\n  return {\n    width: data.offsets.target.width,\n    height: data.offsets.target.height,\n    left: Math.floor(data.offsets.target.left),\n    top: Math.round(data.offsets.target.top),\n    bottom: Math.round(data.offsets.target.bottom),\n    right: Math.floor(data.offsets.target.right)\n  };\n}\n","/**\n * Update class for the given popper\n */\nimport { Renderer2 } from '@angular/core';\nimport { Data } from '../models';\n\nexport function updateContainerClass(data: Data, renderer?: Renderer2): void {\n  const target = data.instance.target;\n\n  let containerClass = target.className;\n\n  if (data.placementAuto) {\n    containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\n    containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\n    containerClass = containerClass.replace(/\\sauto/g, ` ${data.placement}`);\n\n    if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n      containerClass += ' popover-auto';\n    }\n\n    if (containerClass.indexOf('tooltip') !== -1  && containerClass.indexOf('tooltip-auto') === -1) {\n      containerClass += ' tooltip-auto';\n    }\n  }\n\n  containerClass = containerClass.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\n\n  if (renderer) {\n    renderer.setAttribute(target, 'class', containerClass);\n\n    return;\n  }\n\n  target.className = containerClass;\n}\n","import { Injectable, ElementRef, RendererFactory2, Inject, PLATFORM_ID, NgZone } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { positionElements } from './ng-positioning';\n\nimport { fromEvent, merge, of, animationFrameScheduler, Subject, Observable } from 'rxjs';\nimport { Options } from './models';\n\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\n@Injectable()\nexport class PositioningService {\n  private options: Options;\n  private update$$ = new Subject<null>();\n  private positionElements = new Map();\n  private triggerEvent$: Observable<number|Event>;\n  private isDisabled = false;\n\n  constructor(\n    ngZone: NgZone,\n    rendererFactory: RendererFactory2,\n    @Inject(PLATFORM_ID) platformId: number\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n      ngZone.runOutsideAngular(() => {\n        this.triggerEvent$ = merge(\n          fromEvent(window, 'scroll', { passive: true }),\n          fromEvent(window, 'resize', { passive: true }),\n          /* tslint:disable-next-line: deprecation */\n          of(0, animationFrameScheduler),\n          this.update$$\n        );\n\n        this.triggerEvent$.subscribe(() => {\n          if (this.isDisabled) {\n            return;\n          }\n\n          this.positionElements\n          /* tslint:disable-next-line: no-any */\n            .forEach((positionElement: any) => {\n              positionElements(\n                _getHtmlElement(positionElement.target),\n                _getHtmlElement(positionElement.element),\n                positionElement.attachment,\n                positionElement.appendToBody,\n                this.options,\n                rendererFactory.createRenderer(null, null)\n              );\n            });\n        });\n      });\n    }\n  }\n\n  position(options: PositioningOptions): void {\n    this.addPositionElement(options);\n  }\n\n  get event$(): Observable<number|Event> {\n    return this.triggerEvent$;\n  }\n\n  disable(): void {\n    this.isDisabled = true;\n  }\n\n  enable(): void {\n    this.isDisabled = false;\n  }\n\n  addPositionElement(options: PositioningOptions): void {\n    this.positionElements.set(_getHtmlElement(options.element), options);\n  }\n\n  calcPosition(): void {\n    this.update$$.next();\n  }\n\n  deletePositionElement(elRef: ElementRef): void {\n    this.positionElements.delete(_getHtmlElement(elRef));\n  }\n\n  setOptions(options: Options) {\n    this.options = options;\n  }\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element;\n}\n"]}