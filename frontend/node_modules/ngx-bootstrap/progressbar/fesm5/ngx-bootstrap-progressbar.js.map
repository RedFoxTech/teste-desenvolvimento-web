{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["ng://ngx-bootstrap/progressbar/progressbar.config.ts","ng://ngx-bootstrap/progressbar/progressbar.component.ts","ng://ngx-bootstrap/progressbar/bar.component.ts","ng://ngx-bootstrap/progressbar/progressbar.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate: Boolean = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { ProgressbarType } from './progressbar-type.interface';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  styles: [\n    `\n    :host {\n      width: 100%;\n      display: flex;\n    }\n  `\n  ]\n})\nexport class ProgressbarComponent {\n  /** if `true` changing value of progress bar will be animated */\n  @Input()\n  set animate(value: boolean) {\n    this._animate = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.animate = value;\n    });\n  }\n  /** If `true`, striped classes are applied */\n  @Input()\n  set striped(value: boolean) {\n    this._striped = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.striped = value;\n    });\n  }\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: ProgressbarType;\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set value(value: number | any[]) {\n    this.isStacked = Array.isArray(value);\n    this._value = value;\n  }\n  isStacked = false;\n  _striped: boolean;\n  _animate: boolean;\n  _max = 100;\n\n  /* tslint:disable-next-line:no-any */\n  _value: number | any[];\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n\n  set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  bars: BarComponent[] = [];\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n  addBar(bar: BarComponent): void {\n    bar.animate = this._animate;\n    bar.striped = this._striped;\n\n    this.bars.push(bar);\n  }\n\n  removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Renderer2, SimpleChanges\n} from '@angular/core';\n\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"'\n  }\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  @Input() max: number;\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: string;\n\n  /** current value of progress bar */\n  @Input() value: number;\n\n  @HostBinding('style.width.%')\n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.percent;\n  }\n\n  @HostBinding('class.progress-bar') addClass = true;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  striped: boolean;\n  animate: boolean;\n  percent = 0;\n  progress: ProgressbarComponent;\n\n  private _prevType: string;\n\n  constructor(\n    private el: ElementRef,\n    @Host() progress: ProgressbarComponent,\n    private renderer: Renderer2\n  ) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value) {\n      if (!changes.value.currentValue && changes.value.currentValue !== 0) {\n        return;\n      }\n      this.value = changes.value.currentValue;\n      this.recalculatePercentage();\n    }\n\n    if (changes.type) {\n      this.type = changes.type.currentValue;\n      this.applyTypeClasses();\n    }\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = null;\n    }\n\n    if (this.type) {\n      const barTypeClass = `progress-bar-${this.type}`;\n      const bgClass = `bg-${this.type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this.type;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\n    return { ngModule: ProgressbarModule, providers: [] };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;IAEA;;;;QAKE,YAAO,GAAY,KAAK,CAAC;;;;QAEzB,QAAG,GAAG,GAAG,CAAC;KACX;;gBARA,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;4BAJD;CAEA,IAQC;;;;;;IAHC,oCAAyB;;;;;IAEzB,gCAAU;;;;;;;ACTZ;IA4EE,8BAAY,MAAyB;QA7BrC,cAAS,GAAG,KAAK,CAAC;QAGlB,SAAI,GAAG,GAAG,CAAC;QAsBoB,aAAQ,GAAG,IAAI,CAAC;;QAG/C,SAAI,GAAmB,EAAE,CAAC;QAExB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC7B;IA1DD,sBACI,yCAAO;;;;;;;QADX,UACY,KAAc;YACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,OAAO;;;;YAAC,UAAC,CAAe;gBAChC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;aACnB,EAAC,CAAC;SACJ;;;OAAA;IAED,sBACI,yCAAO;;;;;;;QADX,UACY,KAAc;YACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,OAAO;;;;YAAC,UAAC,CAAe;gBAChC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;aACnB,EAAC,CAAC;SACJ;;;OAAA;IAOD,sBAEI,uCAAK;;;;;;;;;;QAFT,UAEU,KAAqB;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;;;OAAA;IAQD,sBAAI,uCAAK;;;;QAAT;YACE,OAAO,KAAK,EAAE,CAAC;SAChB;;;OAAA;IAGD,sBAEI,qCAAG;;;;;;QAFP;YAGE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;;;;;QAED,UAAQ,CAAS;YACf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,OAAO;;;;YAAC,UAAC,GAAiB;gBAClC,GAAG,CAAC,qBAAqB,EAAE,CAAC;aAC7B,EAAC,CAAC;SACJ;;;OAPA;;;;;IAgBD,qCAAM;;;;IAAN,UAAO,GAAiB;QACtB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrB;;;;;IAED,wCAAS;;;;IAAT,UAAU,GAAiB;QACzB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;KAC7C;;gBAlFF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,+SAA2C;6BAEzC,oEAKD;iBAEF;;;;gBAhBQ,iBAAiB;;;0BAmBvB,KAAK;0BAQL,KAAK;uBASL,KAAK;wBAIL,KAAK;sBAkBL,WAAW,SAAC,UAAU,cACtB,KAAK;2BAYL,WAAW,SAAC,gBAAgB;;IAiB/B,2BAAC;CAnFD,IAmFC;;;;;;IApDC,oCAA+B;;IAU/B,yCAAkB;;IAClB,wCAAkB;;IAClB,wCAAkB;;IAClB,oCAAW;;IAGX,sCAAuB;;IAmBvB,wCAA+C;;IAG/C,oCAA0B;;;;;;;AC3E5B;;AAgBA;IA2CE,sBACU,EAAc,EACd,QAA8B,EAC9B,QAAmB;QAFnB,OAAE,GAAF,EAAE,CAAY;QAEd,aAAQ,GAAR,QAAQ,CAAW;QAhBM,aAAQ,GAAG,IAAI,CAAC;QAQnD,YAAO,GAAG,CAAC,CAAC;QAUV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IA1BD,sBACI,qCAAW;;;;QADf;YAEE,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;;;OAAA;IAID,sBAAI,+BAAK;;;;QAAT;YACE,OAAO,KAAK,EAAE,CAAC;SAChB;;;OAAA;;;;IAiBD,+BAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC5B;;;;IAED,kCAAW;;;IAAX;QACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC/B;;;;;IAED,kCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,KAAK,CAAC,EAAE;gBACnE,OAAO;aACR;YACD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;QAED,IAAI,OAAO,CAAC,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;YACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;;;;IAED,4CAAqB;;;IAArB;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;YAE5D,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;aACvC,MAAM;;;;;QAAC,UAAU,KAAa,EAAE,GAAiB;YAChD,OAAO,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;SAC5B,GAAE,CAAC,CAAC;QAEP,IAAI,eAAe,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;SACvC;KACF;;;;;IAEO,uCAAgB;;;;IAAxB;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;;gBACZ,YAAY,GAAG,kBAAgB,IAAI,CAAC,SAAW;;gBAC/C,OAAO,GAAG,QAAM,IAAI,CAAC,SAAW;YACtC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;;gBACP,YAAY,GAAG,kBAAgB,IAAI,CAAC,IAAM;;gBAC1C,OAAO,GAAG,QAAM,IAAI,CAAC,IAAM;YACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;YACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;SAC5B;KACF;;gBAvGF,SAAS,SAAC;oBACT,QAAQ,EAAE,KAAK;oBACf,uCAAmC;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,aAAa;wBACnB,eAAe,EAAE,GAAG;wBACpB,+BAA+B,EAAE,mBAAmB;wBACpD,8BAA8B,EAAE,SAAS;wBACzC,gBAAgB,EAAE,kBAAkB;wBACpC,sBAAsB,EAAE,OAAO;wBAC/B,uBAAuB,EAAE,yCAAyC;wBAClE,sBAAsB,EAAE,KAAK;wBAC7B,kBAAkB,EAAE,OAAO;qBAC5B;iBACF;;;;gBAvBC,UAAU;gBAIH,oBAAoB,uBAkDxB,IAAI;gBArDP,SAAS;;;sBAwBR,KAAK;uBAEL,KAAK;wBAGL,KAAK;8BAEL,WAAW,SAAC,eAAe;2BAO3B,WAAW,SAAC,oBAAoB;;IA0EnC,mBAAC;CAxGD,IAwGC;;;IAxFC,2BAAqB;;;;;IAErB,4BAAsB;;;;;IAGtB,6BAAuB;;IASvB,gCAAmD;;IAMnD,+BAAiB;;IACjB,+BAAiB;;IACjB,+BAAY;;IACZ,gCAA+B;;;;;IAE/B,iCAA0B;;;;;IAGxB,0BAAsB;;;;;IAEtB,gCAA2B;;;;;;;AC9D/B;IAMA;KASC;;;;IAHQ,yBAAO;;;IAAd;QACE,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KACvD;;gBARF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,YAAY,EAAE,oBAAoB,CAAC;oBAClD,OAAO,EAAE,CAAC,YAAY,EAAE,oBAAoB,CAAC;iBAC9C;;IAKD,wBAAC;CATD;;;;;;;;;;;;;;"}