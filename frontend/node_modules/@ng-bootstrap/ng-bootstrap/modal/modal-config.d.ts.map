{"version":3,"file":"modal-config.d.ts","sources":["modal-config.d.ts"],"names":[],"mappingssourcesContent":["import { Injector } from '@angular/core';\r\nimport { NgbConfig } from '../ngb-config';\r\n/**\r\n * Options available when opening new modal windows with `NgbModal.open()` method.\r\n */\r\nexport interface NgbModalOptions {\r\n    /**\r\n     * If `true`, modal opening and closing will be animated.\r\n     *\r\n     * @since 8.0.0\r\n     */\r\n    animation?: boolean;\r\n    /**\r\n     * `aria-labelledby` attribute value to set on the modal window.\r\n     *\r\n     * @since 2.2.0\r\n     */\r\n    ariaLabelledBy?: string;\r\n    /**\r\n     * `aria-describedby` attribute value to set on the modal window.\r\n     *\r\n     * @since 6.1.0\r\n     */\r\n    ariaDescribedBy?: string;\r\n    /**\r\n     * If `true`, the backdrop element will be created for a given modal.\r\n     *\r\n     * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    backdrop?: boolean | 'static';\r\n    /**\r\n     * Callback right before the modal will be dismissed.\r\n     *\r\n     * If this function returns:\r\n     * * `false`\r\n     * * a promise resolved with `false`\r\n     * * a promise that is rejected\r\n     *\r\n     * then the modal won't be dismissed.\r\n     */\r\n    beforeDismiss?: () => boolean | Promise<boolean>;\r\n    /**\r\n     * If `true`, the modal will be centered vertically.\r\n     *\r\n     * Default value is `false`.\r\n     *\r\n     * @since 1.1.0\r\n     */\r\n    centered?: boolean;\r\n    /**\r\n     * A selector specifying the element all new modal windows should be appended to.\r\n     * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\r\n     *\r\n     * If not specified, will be `body`.\r\n     */\r\n    container?: string | HTMLElement;\r\n    /**\r\n     * The `Injector` to use for modal content.\r\n     */\r\n    injector?: Injector;\r\n    /**\r\n     * If `true`, the modal will be closed when `Escape` key is pressed\r\n     *\r\n     * Default value is `true`.\r\n     */\r\n    keyboard?: boolean;\r\n    /**\r\n     * Scrollable modal content (false by default).\r\n     *\r\n     * @since 5.0.0\r\n     */\r\n    scrollable?: boolean;\r\n    /**\r\n     * Size of a new modal window.\r\n     */\r\n    size?: 'sm' | 'lg' | 'xl' | string;\r\n    /**\r\n     * A custom class to append to the modal window.\r\n     */\r\n    windowClass?: string;\r\n    /**\r\n     * A custom class to append to the modal dialog.\r\n     *\r\n     * @since 9.1.0\r\n     */\r\n    modalDialogClass?: string;\r\n    /**\r\n     * A custom class to append to the modal backdrop.\r\n     *\r\n     * @since 1.1.0\r\n     */\r\n    backdropClass?: string;\r\n}\r\n/**\r\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all modals used in the application.\r\n*\r\n* @since 3.1.0\r\n*/\r\nexport declare class NgbModalConfig implements Required<NgbModalOptions> {\r\n    private _ngbConfig;\r\n    ariaLabelledBy: string;\r\n    ariaDescribedBy: string;\r\n    backdrop: boolean | 'static';\r\n    beforeDismiss: () => boolean | Promise<boolean>;\r\n    centered: boolean;\r\n    container: string;\r\n    injector: Injector;\r\n    keyboard: boolean;\r\n    scrollable: boolean;\r\n    size: 'sm' | 'lg' | 'xl' | string;\r\n    windowClass: string;\r\n    modalDialogClass: string;\r\n    backdropClass: string;\r\n    private _animation;\r\n    constructor(_ngbConfig: NgbConfig);\r\n    get animation(): boolean;\r\n    set animation(animation: boolean);\r\n}\r\n"]}