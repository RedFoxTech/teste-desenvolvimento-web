{"version":3,"file":"progressbar.d.ts","sources":["progressbar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbProgressbarConfig } from './progressbar-config';\r\n/**\r\n * A directive that provides feedback on the progress of a workflow or an action.\r\n */\r\nexport declare class NgbProgressbar {\r\n    private _max;\r\n    /**\r\n     * The maximal value to be displayed in the progress bar.\r\n     *\r\n     * Should be a positive number. Will default to 100 otherwise.\r\n     */\r\n    set max(max: number);\r\n    get max(): number;\r\n    /**\r\n     * If `true`, the stripes on the progress bar are animated.\r\n     *\r\n     * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\r\n     */\r\n    animated: boolean;\r\n    /**\r\n     * If `true`, the progress bars will be displayed as striped.\r\n     */\r\n    striped: boolean;\r\n    /**\r\n     * If `true`, the current percentage will be shown in the `xx%` format.\r\n     */\r\n    showValue: boolean;\r\n    /**\r\n     * Optional text variant type of the progress bar.\r\n     *\r\n     * Supports types based on Bootstrap background color variants, like:\r\n     *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\r\n     *\r\n     * @since 5.2.0\r\n     */\r\n    textType: string;\r\n    /**\r\n     * The type of the progress bar.\r\n     *\r\n     * Supports types based on Bootstrap background color variants, like:\r\n     *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\r\n     */\r\n    type: string;\r\n    /**\r\n     * The current value for the progress bar.\r\n     *\r\n     * Should be in the `[0, max]` range.\r\n     */\r\n    value: number;\r\n    /**\r\n     * The height of the progress bar.\r\n     *\r\n     * Accepts any valid CSS height values, ex. `\"2rem\"`\r\n     */\r\n    height: string;\r\n    constructor(config: NgbProgressbarConfig);\r\n    getValue(): number;\r\n    getPercentValue(): number;\r\n}\r\n"]}