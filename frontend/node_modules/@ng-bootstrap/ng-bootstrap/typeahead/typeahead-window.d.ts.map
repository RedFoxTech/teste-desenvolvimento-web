{"version":3,"file":"typeahead-window.d.ts","sources":["typeahead-window.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit, TemplateRef } from '@angular/core';\r\nimport { toString } from '../util/util';\r\n/**\r\n * The context for the typeahead result template in case you want to override the default one.\r\n */\r\nexport interface ResultTemplateContext {\r\n    /**\r\n     * Your typeahead result item.\r\n     */\r\n    result: any;\r\n    /**\r\n     * Search term from the `<input>` used to get current result.\r\n     */\r\n    term: string;\r\n}\r\nexport declare class NgbTypeaheadWindow implements OnInit {\r\n    activeIdx: number;\r\n    /**\r\n     *  The id for the typeahead window. The id should be unique and the same\r\n     *  as the associated typeahead's id.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Flag indicating if the first row should be active initially\r\n     */\r\n    focusFirst: boolean;\r\n    /**\r\n     * Typeahead match results to be displayed\r\n     */\r\n    results: any;\r\n    /**\r\n     * Search term used to get current results\r\n     */\r\n    term: string;\r\n    /**\r\n     * A function used to format a given result before display. This function should return a formatted string without any\r\n     * HTML markup\r\n     */\r\n    formatter: typeof toString;\r\n    /**\r\n     * A template to override a matching result default display\r\n     */\r\n    resultTemplate: TemplateRef<ResultTemplateContext>;\r\n    /**\r\n    * A custom class to append to the typeahead window\r\n     *\r\n     * @since 9.1.0\r\n    */\r\n    popupClass: string;\r\n    /**\r\n     * Event raised when user selects a particular result row\r\n     */\r\n    selectEvent: EventEmitter<any>;\r\n    activeChangeEvent: EventEmitter<any>;\r\n    hasActive(): boolean;\r\n    getActive(): any;\r\n    markActive(activeIdx: number): void;\r\n    next(): void;\r\n    prev(): void;\r\n    resetActive(): void;\r\n    select(item: any): void;\r\n    ngOnInit(): void;\r\n    private _activeChanged;\r\n}\r\n"]}