{"version":3,"file":"ngb-calendar-hijri.d.ts","sources":["ngb-calendar-hijri.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbDate } from '../ngb-date';\r\nimport { NgbPeriod, NgbCalendar } from '../ngb-calendar';\r\nexport declare abstract class NgbCalendarHijri extends NgbCalendar {\r\n    /**\r\n     * Returns the number of days in a specific Hijri month.\r\n     * `month` is 1 for Muharram, 2 for Safar, etc.\r\n     * `year` is any Hijri year.\r\n     */\r\n    abstract getDaysPerMonth(month: number, year: number): number;\r\n    /**\r\n     * Returns the equivalent Hijri date value for a give input Gregorian date.\r\n     * `gDate` is s JS Date to be converted to Hijri.\r\n     */\r\n    abstract fromGregorian(gDate: Date): NgbDate;\r\n    /**\r\n     * Converts the current Hijri date to Gregorian.\r\n     */\r\n    abstract toGregorian(hDate: NgbDate): Date;\r\n    getDaysPerWeek(): number;\r\n    getMonths(): number[];\r\n    getWeeksPerMonth(): number;\r\n    getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n    getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n    getWeekday(date: NgbDate): number;\r\n    getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\r\n    getToday(): NgbDate;\r\n    isValid(date?: NgbDate | null): boolean;\r\n    private _setDay;\r\n    private _setMonth;\r\n    private _setYear;\r\n}\r\n"]}