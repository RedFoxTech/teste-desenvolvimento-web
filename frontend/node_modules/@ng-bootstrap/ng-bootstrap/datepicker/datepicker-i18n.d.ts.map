{"version":3,"file":"datepicker-i18n.d.ts","sources":["datepicker-i18n.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TranslationWidth } from '@angular/common';\r\nimport { NgbDateStruct } from './ngb-date-struct';\r\nexport declare function NGB_DATEPICKER_18N_FACTORY(locale: any): NgbDatepickerI18nDefault;\r\n/**\r\n * A service supplying i18n data to the datepicker component.\r\n *\r\n * The default implementation of this service uses the Angular locale and registered locale data for\r\n * weekdays and month names (as explained in the Angular i18n guide).\r\n *\r\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\r\n * numerals. For other static labels the datepicker uses the default Angular i18n.\r\n *\r\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\r\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\r\n * a custom provider for i18n.\r\n */\r\nexport declare abstract class NgbDatepickerI18n {\r\n    /**\r\n     * Returns the short weekday name to display in the heading of the month view.\r\n     *\r\n     * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\r\n     *\r\n     * @deprecated 9.1.0, use 'getWeekdayLabel' instead\r\n     */\r\n    abstract getWeekdayShortName(weekday: number): string;\r\n    /**\r\n     * Returns the weekday label using specified width\r\n     *\r\n     * @since 9.1.0\r\n     */\r\n    getWeekdayLabel(weekday: number, width?: TranslationWidth): string;\r\n    /**\r\n     * Returns the short month name to display in the date picker navigation.\r\n     *\r\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n     */\r\n    abstract getMonthShortName(month: number, year?: number): string;\r\n    /**\r\n     * Returns the full month name to display in the date picker navigation.\r\n     *\r\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n     */\r\n    abstract getMonthFullName(month: number, year?: number): string;\r\n    /**\r\n     * Returns the text label to display above the day view.\r\n     *\r\n     * @since 9.1.0\r\n     */\r\n    getMonthLabel(date: NgbDateStruct): string;\r\n    /**\r\n     * Returns the value of the `aria-label` attribute for a specific date.\r\n     *\r\n     * @since 2.0.0\r\n     */\r\n    abstract getDayAriaLabel(date: NgbDateStruct): string;\r\n    /**\r\n     * Returns the textual representation of a day that is rendered in a day cell.\r\n     *\r\n     * @since 3.0.0\r\n     */\r\n    getDayNumerals(date: NgbDateStruct): string;\r\n    /**\r\n     * Returns the textual representation of a week number rendered by datepicker.\r\n     *\r\n     * @since 3.0.0\r\n     */\r\n    getWeekNumerals(weekNumber: number): string;\r\n    /**\r\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\r\n     *\r\n     * @since 3.0.0\r\n     */\r\n    getYearNumerals(year: number): string;\r\n    /**\r\n     * Returns the week label to display in the heading of the month view.\r\n     *\r\n     * @since 9.1.0\r\n     */\r\n    getWeekLabel(): string;\r\n}\r\n/**\r\n * A service providing default implementation for the datepicker i18n.\r\n * It can be used as a base implementation if necessary.\r\n *\r\n * @since 9.1.0\r\n */\r\nexport declare class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\r\n    private _locale;\r\n    private _monthsShort;\r\n    private _monthsFull;\r\n    constructor(_locale: string);\r\n    getWeekdayShortName(weekday: number): string;\r\n    getWeekdayLabel(weekday: number, width?: TranslationWidth): string;\r\n    getMonthShortName(month: number): string;\r\n    getMonthFullName(month: number): string;\r\n    getDayAriaLabel(date: NgbDateStruct): string;\r\n}\r\n"]}