{"version":3,"file":"datepicker-month.d.ts","sources":["datepicker-month.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbDatepicker } from './datepicker';\r\nimport { NgbDatepickerI18n } from './datepicker-i18n';\r\nimport { NgbDatepickerKeyboardService } from './datepicker-keyboard-service';\r\nimport { NgbDatepickerService } from './datepicker-service';\r\nimport { MonthViewModel, DayViewModel } from './datepicker-view-model';\r\nimport { NgbDateStruct } from './ngb-date-struct';\r\n/**\r\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\r\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\r\n *\r\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\r\n *\r\n * @since 5.3.0\r\n */\r\nexport declare class NgbDatepickerMonth {\r\n    i18n: NgbDatepickerI18n;\r\n    datepicker: NgbDatepicker;\r\n    private _keyboardService;\r\n    private _service;\r\n    /**\r\n     * The first date of month to be rendered.\r\n     *\r\n     * This month must one of the months present in the\r\n     * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\r\n     */\r\n    set month(month: NgbDateStruct);\r\n    viewModel: MonthViewModel;\r\n    constructor(i18n: NgbDatepickerI18n, datepicker: NgbDatepicker, _keyboardService: NgbDatepickerKeyboardService, _service: NgbDatepickerService);\r\n    onKeyDown(event: KeyboardEvent): void;\r\n    doSelect(day: DayViewModel): void;\r\n}\r\n"]}