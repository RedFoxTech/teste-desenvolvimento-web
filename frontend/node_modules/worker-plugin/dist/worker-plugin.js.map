{"version":3,"file":"worker-plugin.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport path from 'path';\nimport WORKER_PLUGIN_SYMBOL from './symbol';\nlet ParserHelpers;\ntry {\n  ParserHelpers = require('webpack/lib/javascript/JavascriptParserHelpers'); // Webpack 5\n} catch (e) {}\nParserHelpers = ParserHelpers || require('webpack/lib/ParserHelpers'); // Webpack 4\nlet HarmonyImportSpecifierDependency;\ntry {\n  HarmonyImportSpecifierDependency = require('webpack/lib/dependencies/HarmonyImportSpecifierDependency');\n} catch (e) {}\n\nconst NAME = 'WorkerPlugin';\nconst workerLoader = path.resolve(__dirname, 'loader.js');\n\nexport default class WorkerPlugin {\n  constructor (options) {\n    this.options = options || {};\n    this[WORKER_PLUGIN_SYMBOL] = true;\n  }\n\n  apply (compiler) {\n    compiler.hooks.normalModuleFactory.tap(NAME, factory => {\n      let workerId = 0;\n      factory.hooks.parser.for('javascript/auto').tap(NAME, parser => parse(parser, false));\n      factory.hooks.parser.for('javascript/dynamic').tap(NAME, parser => parse(parser, false));\n      factory.hooks.parser.for('javascript/esm').tap(NAME, parser => parse(parser, true));\n\n      const parse = (parser, esModule) => {\n        const handleWorker = workerTypeString => expr => {\n          const dep = parser.evaluateExpression(expr.arguments[0]);\n\n          const optsExpr = expr.arguments[1];\n          let hasInitOptions = false;\n          let typeModuleExpr;\n          let opts;\n          if (optsExpr) {\n            opts = {};\n            for (let i = optsExpr.properties.length; i--;) {\n              const prop = optsExpr.properties[i];\n              if (prop.type === 'Property' && !prop.computed && !prop.shorthand && !prop.method) {\n                opts[prop.key.name] = parser.evaluateExpression(prop.value).string;\n\n                if (prop.key.name === 'type') {\n                  typeModuleExpr = prop;\n                } else {\n                  hasInitOptions = true;\n                }\n              }\n            }\n          }\n\n          if (!opts || opts.type !== 'module') {\n            // If an unknown type value is passed, it's probably an error and we can warn the developer:\n            if (opts && opts.type !== 'classic') {\n              parser.state.module.warnings.push({\n                message: `new ${workerTypeString}() will only be bundled if passed options that include { type: 'module' }.${opts ? `\\n  Received: new ${workerTypeString}()(${JSON.stringify(dep.string)}, ${JSON.stringify(opts)})` : ''}`\n              });\n            }\n            return false;\n          }\n\n          if (!dep.isString()) {\n            parser.state.module.warnings.push({\n              message: `new ${workerTypeString}(\"..\", { type: \"module\" }) will only be bundled if passed a String.`\n            });\n            return false;\n          }\n\n          const isStrictModule = esModule || (parser.state.buildMeta && parser.state.buildMeta.strictHarmonyModule);\n\n          // Querystring-encoded loader prefix (faster/cleaner than JSON parameters):\n          const loaderRequest = `${workerLoader}?name=${encodeURIComponent(opts.name || workerId)}${isStrictModule ? '&esModule' : ''}!${dep.string}`;\n\n          // Unique ID for the worker URL variable:\n          const id = `__webpack__worker__${workerId++}`;\n\n          // .mjs / strict harmony mode\n          if (isStrictModule) {\n            const module = parser.state.current;\n\n            if (!HarmonyImportSpecifierDependency) {\n              throw Error(`${NAME}: Failed to import HarmonyImportSpecifierDependency. This plugin requires Webpack version 4.`);\n            }\n\n            // This is essentially the internals of \"prepend an import to the module\":\n            const dependency = new HarmonyImportSpecifierDependency(\n              loaderRequest,\n              module,\n              workerId, // no idea if this actually needs to be unique. 0 seemed to work. safety first?\n              parser.scope,\n              'default',\n              id, // this never gets used\n              expr.arguments[0].range, // replace the usage/callsite with the generated reference: X_IMPORT_0[\"default\"]\n              true\n            );\n            // avoid serializing the full loader filepath: (this gets prepended to unique suffix)\n            dependency.userRequest = dep.string;\n\n            module.addDependency(dependency);\n          } else {\n            // For CommonJS/Auto\n            const req = `require(${JSON.stringify(loaderRequest)})`;\n            ParserHelpers.toConstantDependency(parser, id)(expr.arguments[0]);\n            ParserHelpers.addParsedVariableToModule(parser, id, req);\n          }\n\n          // update/remove the WorkerInitOptions argument\n          if (this.options.workerType) {\n            ParserHelpers.toConstantDependency(parser, JSON.stringify(this.options.workerType))(typeModuleExpr.value);\n          } else if (this.options.preserveTypeModule !== true) {\n            if (hasInitOptions) {\n              // there might be other options - to avoid trailing comma issues, replace the type value with undefined but *leave the key*:\n              ParserHelpers.toConstantDependency(parser, 'type:undefined')(typeModuleExpr);\n            } else {\n              // there was only a `{type}` option, we replace the opts argument with undefined to avoid trailing comma issues:\n              ParserHelpers.toConstantDependency(parser, 'undefined')(optsExpr);\n            }\n          }\n\n          return true;\n        };\n\n        if (this.options.worker !== false) {\n          parser.hooks.new.for('Worker').tap(NAME, handleWorker('Worker'));\n        }\n        if (this.options.sharedWorker) {\n          parser.hooks.new.for('SharedWorker').tap(NAME, handleWorker('SharedWorker'));\n        }\n      };\n    });\n  }\n}\n"],"names":["let","ParserHelpers","require","e","HarmonyImportSpecifierDependency","const","NAME","workerLoader","path","resolve","__dirname","WorkerPlugin","constructor","options","WORKER_PLUGIN_SYMBOL","apply","compiler","hooks","normalModuleFactory","tap","factory","workerId","parser","for","parse","esModule","handleWorker","workerTypeString","expr","dep","evaluateExpression","arguments","optsExpr","hasInitOptions","typeModuleExpr","opts","i","properties","length","prop","type","computed","shorthand","method","key","name","value","string","state","module","warnings","push","message","JSON","stringify","isString","isStrictModule","buildMeta","strictHarmonyModule","loaderRequest","encodeURIComponent","id","current","Error","dependency","scope","range","userRequest","addDependency","req","toConstantDependency","addParsedVariableToModule","this","workerType","preserveTypeModule","worker","new","sharedWorker"],"mappings":"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"}