{"version":3,"file":"ng2-search-filter.umd.min.js","sources":["~/ng2-search-filter/src/ng2-filter.pipe.ts","~/ng2-search-filter/src/ng2-filter.module.ts"],"sourcesContent":["import { Pipe, PipeTransform, Injectable } from '@angular/core';\nexport class Ng2SearchPipe implements PipeTransform {\n/**\n * @param {?} items object from array\n * @param {?} term term's search\n * @return {?}\n */\ntransform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return Ng2SearchPipe.filter(items, term);\n  }\n/**\n *\n * @param {?} items List of items to filter\n * @param {?} term  a string term to compare with every property of the list\n * \n * @return {?}\n */\nstatic filter(items: Array<{ [key: string]: any }>, term: string): Array<{ [key: string]: any }> {\n\n    const /** @type {?} */ toCompare = term.toLowerCase();\n/**\n * @param {?} item\n * @param {?} term\n * @return {?}\n */\nfunction checkInside(item: any, term: string) {\n      for (let /** @type {?} */ property in item) {\n        if (item[property] === null || item[property] == undefined) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'filter',\n  pure: false\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { Ng2SearchPipe } from './ng2-filter.pipe';\nexport class Ng2SearchPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [Ng2SearchPipe],\n  exports: [Ng2SearchPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Ng2SearchPipe","prototype","transform","items","term","filter","toCompare","toLowerCase","item","checkInside","property","undefined","toString","includes","decorators","type","Pipe","args","name","pure","Injectable","ctorParameters","Ng2SearchPipeModule","NgModule","declarations","exports"],"mappings":"4PACA,IAAAA,EAAA,WAAA,SAAAA,YAMAA,EAAAC,UAAAC,UAAA,SAGGC,EAAAC,GAFC,OAGKA,GAAQD,EAENH,EAAcK,OAAOF,EAAOC,GAFPD,GAW7BH,EAAHK,OAHA,SAGGF,EAAAC,GADC,IAGME,EAAYF,EAAKG,cAoBvB,OADOJ,EAAME,OAAO,SAACG,GAEnB,OAlBN,SAAAC,EADKD,EAAAJ,GAEC,IAAK,IADIM,KAAYF,EAEnB,GADuB,OACnBA,EADKE,IAAsBF,EAAKE,IAAaC,UACjD,CAGA,GAD8B,iBAAnBH,EAAKE,IAEVD,EADYD,EAAKE,GAAWN,GAE9B,OADO,EAIX,GAAII,EADKE,GAAUE,WAAWL,cAAcM,SAASP,GAEnD,OADO,EAIX,OADO,EAIAG,CAAYD,EAAMJ,QA3C/B,GA8COJ,EAAPc,aACEC,KAAMC,EAAAA,KAAMC,OAEZC,KADM,SAENC,MADM,MAENJ,KAAMK,EAAAA,aAGPpB,EAADqB,eAAC,WAAA,UCrDD,IAAAC,EAAA,kBAAA,aAAA,GAG0CA,EAA1CR,aACEC,KAAMQ,EAAAA,SAAUN,OAFhBO,cAGcxB,GAFdyB,SAGSzB,OAIVsB,EAADD,eAAC,WAAA"}
