{"version":3,"file":"ng2-search-filter.umd.js","sources":["~/ng2-search-filter/src/ng2-filter.module.ts","~/ng2-search-filter/src/ng2-filter.pipe.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Ng2SearchPipe } from './ng2-filter.pipe';\nexport class Ng2SearchPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [Ng2SearchPipe],\n  exports: [Ng2SearchPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\nexport class Ng2SearchPipe implements PipeTransform {\n/**\n * @param {?} items object from array\n * @param {?} term term's search\n * @return {?}\n */\ntransform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return Ng2SearchPipe.filter(items, term);\n  }\n/**\n *\n * @param {?} items List of items to filter\n * @param {?} term  a string term to compare with every property of the list\n * \n * @return {?}\n */\nstatic filter(items: Array<{ [key: string]: any }>, term: string): Array<{ [key: string]: any }> {\n\n    const /** @type {?} */ toCompare = term.toLowerCase();\n/**\n * @param {?} item\n * @param {?} term\n * @return {?}\n */\nfunction checkInside(item: any, term: string) {\n      for (let /** @type {?} */ property in item) {\n        if (item[property] === null || item[property] == undefined) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'filter',\n  pure: false\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2SearchPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2SearchPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2SearchPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Injectable","Pipe"],"mappings":";;;;;;ACCA,IAAA,aAAA,IAAA,YAAA;IAAA,SAAA,aAAA,GAAA;;;;;;;IAMA,aAAA,CAAA,SAAA,CAAA,SAGG,GAHH,UAGG,KAAA,EAAA,IAAA,EAHH;QACI,IAAI,CAGC,IAAC,IAAO,CAAA,KAAE;YAAM,OAAO,KAAA,CAAM;QADlC,OAGO,aAAA,CAAc,MAAC,CAAM,KAAC,EAAM,IAAA,CAAK,CAAC;KAF1C,CAAH;;;;;;;;IAWG,aAAH,CAAA,MAAG,GAHH,UAGG,KAAA,EAAA,IAAA,EAAH;QADI,qBAGM,SAAA,GAAY,IAAA,CAAK,WAAC,EAAW,CAAE;;;;;;QAGzC,SAAA,WAAA,CADK,IAAA,EAAA,IAAA,EACL;YACM,KAAK,qBADI,QAAA,IAAY,IAAA,EAAM;gBAEzB,IAAI,IADC,CAAI,QAAC,CAAQ,KAAK,IAAA,IAAQ,IAAA,CAAK,QAAC,CAAQ,IAAI,SAAA,EAAW;oBAE1D,SAAS;iBACV;gBACD,IAAI,OADO,IAAA,CAAK,QAAC,CAAQ,KAAK,QAAA,EAAU;oBAEtC,IAAI,WADC,CAAW,IAAC,CAAI,QAAC,CAAQ,EAAE,IAAA,CAAK,EAAE;wBAErC,OADO,IAAA,CAAK;qBAEb;iBACF;gBACD,IAAI,IADC,CAAI,QAAC,CAAQ,CAAC,QAAC,EAAQ,CAAE,WAAC,EAAW,CAAE,QAAC,CAAQ,SAAC,CAAS,EAAE;oBAE/D,OADO,IAAA,CAAK;iBAEb;aACF;YACD,OADO,KAAA,CAAM;SAEd;QAED,OADO,KAAA,CAAM,MAAC,CAAM,UAAC,IAAU,EACnC;YACM,OADO,WAAA,CAAY,IAAC,EAAK,IAAA,CAAK,CAAC;SAEhC,CADC,CAAC;KAEJ,CAAH;;CA9CA,EAAA,CAAA,CAAA;AA8CO,aAAP,CAAA,UAAO,GAAoC;IAE3C,EADE,IAAA,EAAME,SAAA,EAAM,IAAA,EAAM,CAAA;gBAElB,IAAI,EADE,QAAA;gBAEN,IAAI,EADE,KAAA;aAEP,EADC,EAAG;IAEL,EADE,IAAA,EAAMD,eAAA,EAAW;CAElB,CADC;;;;AAED,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAIA,CAJD,EAIC,CAAC;ADzDF,IAAA,mBAAA,IAAA,YAAA;IAAA,SAAA,mBAAA,GAAA;;;CAAA,EAAA,CAAA,CAAA;AAG0C,mBAA1C,CAAA,UAA0C,GAAoC;IAF9E,EAGE,IAAA,EAAMD,aAAA,EAAU,IAAA,EAAM,CAAA;gBAFtB,YAAY,EAGE,CAAA,aAAE,CAAa;gBAF7B,OAAO,EAGE,CAAA,aAAE,CAAa;aAFzB,EAGC,EAAG;CAFJ,CAGC;;;;AAED,mBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAAA,CAAD,EAAC,CAAC;;;;;;;;;;;;;"}
