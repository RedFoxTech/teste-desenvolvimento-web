{"version":3,"sources":["../source/parseDate.test.js"],"names":["parseDate","describe","it","date","convertToUTCTimezone","Date","getTime","should","equal","getTimezoneOffset"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;;AAEAC,SAAS,WAAT,EAAsB,YAAM;AAC3BC,IAAG,mCAAH,EAAwC,YAAM;AAC7C,MAAMC,OAAOC,qBAAqB,IAAIC,IAAJ,CAAS,IAAT,EAAe,IAAI,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAArB,CAAb;AACE;AACA;AACFL,YAAU,KAAV,EAAiBM,OAAjB,GAA2BC,MAA3B,CAAkCC,KAAlC,CAAwCL,KAAKG,OAAL,EAAxC;AACA,EALD;AAMA,CAPD;;AASA;AACA,SAASF,oBAAT,CAA8BD,IAA9B,EAAoC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,IAAIE,IAAJ,CAASF,KAAKG,OAAL,KAAiBH,KAAKM,iBAAL,KAA2B,EAA3B,GAAgC,IAA1D,CAAP;AACA","file":"parseDate.test.js","sourcesContent":["import parseDate from './parseDate'\r\n\r\ndescribe('parseDate', () => {\r\n\tit('should parse Excel \"serial\" dates', () => {\r\n\t\tconst date = convertToUTCTimezone(new Date(2018, 3 - 1, 24, 12))\r\n    // Excel stores dates as integers.\r\n    // E.g. '24/03/2018' === 43183\r\n\t\tparseDate(43183).getTime().should.equal(date.getTime())\r\n\t})\r\n})\r\n\r\n// Converts timezone to UTC while preserving the same time\r\nfunction convertToUTCTimezone(date) {\r\n\t// Doesn't account for leap seconds but I guess that's ok\r\n\t// given that javascript's own `Date()` does not either.\r\n\t// https://www.timeanddate.com/time/leap-seconds-background.html\r\n\t//\r\n\t// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\r\n\t//\r\n\treturn new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000)\r\n}\r\n"]}