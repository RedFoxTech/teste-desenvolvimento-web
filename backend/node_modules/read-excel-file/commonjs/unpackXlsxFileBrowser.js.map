{"version":3,"sources":["../source/unpackXlsxFileBrowser.js"],"names":["unpackXlsxFile","file","files","then","zip","forEach","relativePath","zipEntry","dir","push","name","entries","Promise","all","map","async","content"],"mappings":";;;;;kBAOwBA,c;;AAPxB;;AAEA;;;;;AAKe,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC5C,KAAMC,QAAQ,EAAd;;AAEA,QAAO,sBAAUD,IAAV,EAAgBE,IAAhB,CAAqB,UAACC,GAAD,EAAS;AACpC,MAAMF,QAAQ,EAAd;AACAE,MAAIC,OAAJ,CAAY,UAACC,YAAD,EAAeC,QAAf,EAA4B;AACvC,OAAI,CAACA,SAASC,GAAd,EAAmB;AAClBN,UAAMO,IAAN,CAAWF,SAASG,IAApB;AACA;AACD,GAJD;;AAMA,MAAMC,UAAU,EAAhB;AACA,SAAOC,QAAQC,GAAR,CAAYX,MAAMY,GAAN,CAAU,UAACb,IAAD,EAAU;AACtC,UAAOG,IAAIH,IAAJ,CAASA,IAAT,EAAec,KAAf,CAAqB,QAArB,EAA+BZ,IAA/B,CAAoC;AAAA,WAAWQ,QAAQV,IAAR,IAAgBe,OAA3B;AAAA,IAApC,CAAP;AACA,GAFkB,CAAZ,EAGNb,IAHM,CAGD;AAAA,UAAMQ,OAAN;AAAA,GAHC,CAAP;AAIA,EAbM,CAAP;AAcA","file":"unpackXlsxFileBrowser.js","sourcesContent":["import { loadAsync } from 'jszip'\r\n\r\n/**\r\n * Reads XLSX file in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\r\nexport default function unpackXlsxFile(file) {\r\n\tconst files = {}\r\n\r\n\treturn loadAsync(file).then((zip) => {\r\n\t\tconst files = []\r\n\t\tzip.forEach((relativePath, zipEntry) => {\r\n\t\t\tif (!zipEntry.dir) {\r\n\t\t\t\tfiles.push(zipEntry.name)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst entries = {}\r\n\t\treturn Promise.all(files.map((file) => {\r\n\t\t\treturn zip.file(file).async('string').then(content => entries[file] = content)\r\n\t\t}))\r\n\t\t.then(() => entries)\r\n\t})\r\n}"]}