{"version":3,"sources":["../source/readXlsxFileNode.js"],"names":["readXlsxFile","input","options","then","entries"],"mappings":";;;;;kBAWwBA,Y;;AAXxB;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;AAOe,SAASA,YAAT,CAAsBC,KAAtB,EAA2C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACzD,SAAO,kCAAeD,KAAf,EACLE,IADK,CACA,UAACC,OAAD;AAAA,WAAa,oCAAqBA,OAArB,qBAAmCF,OAAnC,CAAb;AAAA,GADA,CAAP;AAEA","file":"readXlsxFileNode.js","sourcesContent":["import unpackXlsxFile from './unpackXlsxFileNode'\r\nimport xml from './xmlNode'\r\nimport readXlsxFileContents from './readXlsxFileContents'\r\n\r\n/**\r\n * Reads XLSX file into a 2D array of cells in a browser.\r\n * @param  {(string|Stream|Buffer)} input - A Node.js readable stream or a `Buffer` or a path to a file.\r\n * @param  {object?} options\r\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\r\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\r\n */\r\nexport default function readXlsxFile(input, options = {}) {\r\n\treturn unpackXlsxFile(input)\r\n\t\t.then((entries) => readXlsxFileContents(entries, xml, options))\r\n}"]}