{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { matchPath } from \"react-router\";\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var isRouter = function isRouter(value) {\n    return value != null && _typeof(value) === 'object' && getIn(value, ['location']) && getIn(value, ['action']);\n  };\n\n  var getRouter = function getRouter(state) {\n    var router = toJS(getIn(state, ['router']));\n\n    if (!isRouter(router)) {\n      throw 'Could not find router reducer in state tree, it must be mounted under \"router\"';\n    }\n\n    return router;\n  };\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(getRouter(state), ['location']));\n  };\n\n  var getAction = function getAction(state) {\n    return toJS(getIn(getRouter(state), ['action']));\n  };\n\n  var getSearch = function getSearch(state) {\n    return toJS(getIn(getRouter(state), ['location', 'search']));\n  };\n\n  var getHash = function getHash(state) {\n    return toJS(getIn(getRouter(state), ['location', 'hash']));\n  }; // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n\n\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n\n      lastPathname = pathname;\n      var match = matchPath(pathname, path);\n\n      if (!match || !lastMatch || match.url !== lastMatch.url) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return {\n    getLocation: getLocation,\n    getAction: getAction,\n    getRouter: getRouter,\n    getSearch: getSearch,\n    getHash: getHash,\n    createMatchSelector: createMatchSelector\n  };\n};\n\nexport default createSelectors;","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/node_modules/connected-react-router/esm/selectors.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","matchPath","createSelectors","structure","getIn","toJS","isRouter","value","getRouter","state","router","getLocation","getAction","getSearch","getHash","createMatchSelector","path","lastPathname","lastMatch","_ref","pathname","match","url"],"mappings":"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","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { matchPath } from \"react-router\";\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var isRouter = function isRouter(value) {\n    return value != null && _typeof(value) === 'object' && getIn(value, ['location']) && getIn(value, ['action']);\n  };\n\n  var getRouter = function getRouter(state) {\n    var router = toJS(getIn(state, ['router']));\n\n    if (!isRouter(router)) {\n      throw 'Could not find router reducer in state tree, it must be mounted under \"router\"';\n    }\n\n    return router;\n  };\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(getRouter(state), ['location']));\n  };\n\n  var getAction = function getAction(state) {\n    return toJS(getIn(getRouter(state), ['action']));\n  };\n\n  var getSearch = function getSearch(state) {\n    return toJS(getIn(getRouter(state), ['location', 'search']));\n  };\n\n  var getHash = function getHash(state) {\n    return toJS(getIn(getRouter(state), ['location', 'hash']));\n  }; // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n\n\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n\n      lastPathname = pathname;\n      var match = matchPath(pathname, path);\n\n      if (!match || !lastMatch || match.url !== lastMatch.url) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return {\n    getLocation: getLocation,\n    getAction: getAction,\n    getRouter: getRouter,\n    getSearch: getSearch,\n    getHash: getHash,\n    createMatchSelector: createMatchSelector\n  };\n};\n\nexport default createSelectors;"]},"metadata":{},"sourceType":"module"}