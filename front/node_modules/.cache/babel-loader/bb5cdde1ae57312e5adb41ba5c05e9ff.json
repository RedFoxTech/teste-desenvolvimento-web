{"ast":null,"code":"var _jsxFileName = \"/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemons/show/ShowPokemonLoader.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { SET_POKEMON_LOADING, SET_POKEMON_SINGLE } from './pokemon.reducer';\nimport { pokemonsResource } from '../../../api/pokemons/pokemonsApi';\nimport { sd } from '../../../helpers/redux';\nimport Text from '../../../components/presentation/Text';\n\nclass ShowPokemonLoader extends React.Component {\n  componentWillMount() {\n    const {\n      id\n    } = this.props;\n    fetchData(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      fetchData\n    } = nextProps;\n\n    if (id !== this.props.id) {\n      fetchData(pokemon.id);\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      children\n    } = this.props;\n    if (!!isLoading) return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Carregando...\");\n    return children;\n  }\n\n}\n\nconst mapState = state => ({\n  isLoading: state.pokemon.isLoading\n});\n\nconst mapActions = dispatch => ({\n  fetchData: id => {\n    sd(dispatch, SET_POKEMON_LOADING, true);\n    pokemonsResource.getList({\n      urlParams: {\n        id\n      }\n    }).then(data => {\n      sd(dispatch, SET_POKEMON_SINGLE, data);\n    }).catch(err => {\n      sd(dispatch, SET_POKEMON_LOADING, false);\n    });\n  }\n});\n\nexport default connect(mapState, mapActions)(ShowPokemonLoader);","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemons/show/ShowPokemonLoader.js"],"names":["connect","React","SET_POKEMON_LOADING","SET_POKEMON_SINGLE","pokemonsResource","sd","Text","ShowPokemonLoader","Component","componentWillMount","id","props","fetchData","componentWillReceiveProps","nextProps","pokemon","render","isLoading","children","mapState","state","mapActions","dispatch","getList","urlParams","then","data","catch","err"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,mBAAxD;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,EAAT,QAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;;AAEA,MAAMC,iBAAN,SAAgCN,KAAK,CAACO,SAAtC,CAAgD;AAC/CC,EAAAA,kBAAkB,GAAG;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAApB;AACAC,IAAAA,SAAS,CAACF,EAAD,CAAT;AACA;;AAEDG,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACpC,UAAM;AAAEJ,MAAAA,EAAF;AAAME,MAAAA;AAAN,QAAoBE,SAA1B;;AACA,QAAIJ,EAAE,KAAK,KAAKC,KAAL,CAAWD,EAAtB,EAA0B;AACzBE,MAAAA,SAAS,CAACG,OAAO,CAACL,EAAT,CAAT;AACA;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,KAAKP,KAArC;AACA,QAAI,CAAC,CAACM,SAAN,EAAiB,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACjB,WAAOC,QAAP;AACA;;AAjB8C;;AAoBhD,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC1BH,EAAAA,SAAS,EAAEG,KAAK,CAACL,OAAN,CAAcE;AADC,CAAL,CAAtB;;AAIA,MAAMI,UAAU,GAAGC,QAAQ,KAAK;AAC/BV,EAAAA,SAAS,EAAEF,EAAE,IAAI;AAChBL,IAAAA,EAAE,CAACiB,QAAD,EAAWpB,mBAAX,EAAgC,IAAhC,CAAF;AACAE,IAAAA,gBAAgB,CACdmB,OADF,CACU;AAAEC,MAAAA,SAAS,EAAE;AAAEd,QAAAA;AAAF;AAAb,KADV,EAEEe,IAFF,CAEOC,IAAI,IAAI;AACbrB,MAAAA,EAAE,CAACiB,QAAD,EAAWnB,kBAAX,EAA+BuB,IAA/B,CAAF;AACA,KAJF,EAKEC,KALF,CAKQC,GAAG,IAAI;AACbvB,MAAAA,EAAE,CAACiB,QAAD,EAAWpB,mBAAX,EAAgC,KAAhC,CAAF;AACA,KAPF;AAQA;AAX8B,CAAL,CAA3B;;AAcA,eAAeF,OAAO,CAACmB,QAAD,EAAWE,UAAX,CAAP,CAA8Bd,iBAA9B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react'\n\nimport { SET_POKEMON_LOADING, SET_POKEMON_SINGLE } from './pokemon.reducer';\nimport { pokemonsResource } from '../../../api/pokemons/pokemonsApi'\nimport { sd } from '../../../helpers/redux'\nimport Text from '../../../components/presentation/Text'\n\nclass ShowPokemonLoader extends React.Component {\n\tcomponentWillMount() {\n\t\tconst { id } = this.props\n\t\tfetchData(id)\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { id, fetchData } = nextProps\n\t\tif (id !== this.props.id) {\n\t\t\tfetchData(pokemon.id)\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { isLoading, children } = this.props\n\t\tif (!!isLoading) return <Text>Carregando...</Text>\n\t\treturn children\n\t}\n}\n\nconst mapState = state => ({\n\tisLoading: state.pokemon.isLoading\n})\n\nconst mapActions = dispatch => ({\n\tfetchData: id => {\n\t\tsd(dispatch, SET_POKEMON_LOADING, true)\n\t\tpokemonsResource\n\t\t\t.getList({ urlParams: { id } })\n\t\t\t.then(data => {\n\t\t\t\tsd(dispatch, SET_POKEMON_SINGLE, data)\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsd(dispatch, SET_POKEMON_LOADING, false)\n\t\t\t})\n\t}\n})\n\nexport default connect(mapState, mapActions)(ShowPokemonLoader)\n"]},"metadata":{},"sourceType":"module"}