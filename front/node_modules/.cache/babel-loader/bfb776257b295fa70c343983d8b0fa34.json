{"ast":null,"code":"var _jsxFileName = \"/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemonFamily/ListPokemonFamilyLoader.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { SET_POKEMON_FAMILY_LIST, SET_POKEMON_FAMILY_LOADING } from './pokemonFamily.reducer';\nimport { pokemonFamiliesResource } from '../../api/pokemonFamilies/pokemonFamiliesApi';\nimport { sd } from '../../../helpers/redux';\nimport Text from '../../../components/presentation/Text';\n\nclass ListPokemonsLoader extends React.Component {\n  componentWillMount() {\n    const {\n      fetchData,\n      familyID,\n      familyMembers\n    } = this.props;\n\n    if (!familyMembers.length) {\n      fetchData(familyID);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      familyID,\n      fetchData\n    } = nextProps;\n\n    if (familyID !== this.props.familyID) {\n      fetchData(familyID);\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      children\n    } = this.props;\n    if (!!isLoading) return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Carregando...\");\n    return children;\n  }\n\n}\n\nconst mapState = state => ({\n  familyMembers: state.pokemonFamily.list,\n  isLoading: state.pokemonFamily.isLoading\n});\n\nconst mapActions = dispatch => ({\n  fetchData: familyID => {\n    sd(dispatch, SET_POKEMON_FAMILY_LOADING, true);\n    pokemonFamiliesResource.get(familyID).then(data => {\n      sd(dispatch, SET_POKEMON_FAMILY_LIST, data);\n    }).catch(err => {\n      sd(dispatch, SET_POKEMON_FAMILY_LOADING, false);\n    });\n  }\n});\n\nexport default connect(mapState, mapActions)(ListPokemonsLoader);","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemonFamily/ListPokemonFamilyLoader.js"],"names":["connect","React","SET_POKEMON_FAMILY_LIST","SET_POKEMON_FAMILY_LOADING","pokemonFamiliesResource","sd","Text","ListPokemonsLoader","Component","componentWillMount","fetchData","familyID","familyMembers","props","length","componentWillReceiveProps","nextProps","render","isLoading","children","mapState","state","pokemonFamily","list","mapActions","dispatch","get","then","data","catch","err"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,uBAAT,EAAkCC,0BAAlC,QAAoE,yBAApE;AACA,SAASC,uBAAT,QAAwC,8CAAxC;AACA,SAASC,EAAT,QAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;;AAEA,MAAMC,kBAAN,SAAiCN,KAAK,CAACO,SAAvC,CAAiD;AAChDC,EAAAA,kBAAkB,GAAG;AACpB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAyC,KAAKC,KAApD;;AACA,QAAI,CAACD,aAAa,CAACE,MAAnB,EAA2B;AAC1BJ,MAAAA,SAAS,CAACC,QAAD,CAAT;AACA;AACD;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACpC,UAAM;AAAEL,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAA0BM,SAAhC;;AACA,QAAIL,QAAQ,KAAK,KAAKE,KAAL,CAAWF,QAA5B,EAAsC;AACrCD,MAAAA,SAAS,CAACC,QAAD,CAAT;AACA;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,KAAKN,KAArC;AACA,QAAI,CAAC,CAACK,SAAN,EAAiB,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACjB,WAAOC,QAAP;AACA;;AAnB+C;;AAsBjD,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC1BT,EAAAA,aAAa,EAAES,KAAK,CAACC,aAAN,CAAoBC,IADT;AAE1BL,EAAAA,SAAS,EAAEG,KAAK,CAACC,aAAN,CAAoBJ;AAFL,CAAL,CAAtB;;AAKA,MAAMM,UAAU,GAAGC,QAAQ,KAAK;AAC/Bf,EAAAA,SAAS,EAAEC,QAAQ,IAAI;AACtBN,IAAAA,EAAE,CAACoB,QAAD,EAAWtB,0BAAX,EAAuC,IAAvC,CAAF;AACAC,IAAAA,uBAAuB,CACrBsB,GADF,CACMf,QADN,EAEEgB,IAFF,CAEOC,IAAI,IAAI;AACbvB,MAAAA,EAAE,CAACoB,QAAD,EAAWvB,uBAAX,EAAoC0B,IAApC,CAAF;AACA,KAJF,EAKEC,KALF,CAKQC,GAAG,IAAI;AACbzB,MAAAA,EAAE,CAACoB,QAAD,EAAWtB,0BAAX,EAAuC,KAAvC,CAAF;AACA,KAPF;AAQA;AAX8B,CAAL,CAA3B;;AAcA,eAAeH,OAAO,CAACoB,QAAD,EAAWI,UAAX,CAAP,CAA8BjB,kBAA9B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react'\n\nimport { SET_POKEMON_FAMILY_LIST, SET_POKEMON_FAMILY_LOADING } from './pokemonFamily.reducer'\nimport { pokemonFamiliesResource } from '../../api/pokemonFamilies/pokemonFamiliesApi'\nimport { sd } from '../../../helpers/redux'\nimport Text from '../../../components/presentation/Text'\n\nclass ListPokemonsLoader extends React.Component {\n\tcomponentWillMount() {\n\t\tconst { fetchData, familyID, familyMembers } = this.props\n\t\tif (!familyMembers.length) {\n\t\t\tfetchData(familyID)\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { familyID, fetchData } = nextProps\n\t\tif (familyID !== this.props.familyID) {\n\t\t\tfetchData(familyID)\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { isLoading, children } = this.props\n\t\tif (!!isLoading) return <Text>Carregando...</Text>\n\t\treturn children\n\t}\n}\n\nconst mapState = state => ({\n\tfamilyMembers: state.pokemonFamily.list,\n\tisLoading: state.pokemonFamily.isLoading\n})\n\nconst mapActions = dispatch => ({\n\tfetchData: familyID => {\n\t\tsd(dispatch, SET_POKEMON_FAMILY_LOADING, true)\n\t\tpokemonFamiliesResource\n\t\t\t.get(familyID)\n\t\t\t.then(data => {\n\t\t\t\tsd(dispatch, SET_POKEMON_FAMILY_LIST, data)\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsd(dispatch, SET_POKEMON_FAMILY_LOADING, false)\n\t\t\t})\n\t}\n})\n\nexport default connect(mapState, mapActions)(ListPokemonsLoader)\n"]},"metadata":{},"sourceType":"module"}