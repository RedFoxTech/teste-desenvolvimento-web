{"ast":null,"code":"var _jsxFileName = \"/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/components/sctructure/Header.js\";\nimport './Header.css';\nimport { Container } from 'react-bootstrap';\nimport React from 'react';\nimport Text from '../presentation/Text';\n\nconst HeaderTitle = ({\n  title,\n  subtitle\n}) => {\n  if (!title) return false;\n  return React.createElement(\"div\", {\n    className: \"header-title-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Text, {\n    size: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, title), React.createElement(Text, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, subtitle));\n};\n\nconst Header = ({\n  children,\n  title,\n  subtitle,\n  bgImage,\n  overlay,\n  fullScreen\n}) => {\n  const bgFullPath = bgImage || process.env.PUBLIC_URL + 'home-header-bg.png';\n  let className = 'header';\n  if (fullScreen) className += ' full-screen';\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      backgroundImage: 'url(' + bgFullPath + ')'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(HeaderTitle, {\n    title: title,\n    subtitle: subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, children)), overlay && React.createElement(\"div\", {\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/components/sctructure/Header.js"],"names":["Container","React","Text","HeaderTitle","title","subtitle","Header","children","bgImage","overlay","fullScreen","bgFullPath","process","env","PUBLIC_URL","className","backgroundImage"],"mappings":";AAAA,OAAO,cAAP;AAEA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACzC,MAAI,CAACD,KAAL,EAAY,OAAO,KAAP;AAEZ,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,KAAjB,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBC,QAApB,CAFF,CADF;AAMD,CATD;;AAWA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWH,EAAAA,KAAX;AAAkBC,EAAAA,QAAlB;AAA4BG,EAAAA,OAA5B;AAAqCC,EAAAA,OAArC;AAA8CC,EAAAA;AAA9C,CAAD,KAA+D;AAC5E,QAAMC,UAAU,GAAGH,OAAO,IAAII,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,oBAAvD;AAEA,MAAIC,SAAS,GAAG,QAAhB;AAEA,MAAIL,UAAJ,EAAgBK,SAAS,IAAI,cAAb;AAEhB,SACE;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAA2B,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,SAASL,UAAT,GAAsB;AAAxC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEP,KAApB;AAA2B,IAAA,QAAQ,EAAEC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYE,QAAZ,CAFF,CADF,EAKGE,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALd,CADF;AASD,CAhBD;;AAkBA,eAAeH,MAAf","sourcesContent":["import './Header.css'\n\nimport { Container } from 'react-bootstrap';\nimport React from 'react'\n\nimport Text from '../presentation/Text'\n\nconst HeaderTitle = ({title, subtitle}) => {\n  if (!title) return false\n\n  return (\n    <div className=\"header-title-wrapper\">\n      <Text size=\"h1\">{title}</Text>\n      <Text size=\"small\">{subtitle}</Text>\n    </div>\n  )\n}\n\nconst Header = ({children, title, subtitle, bgImage, overlay, fullScreen}) => {\n  const bgFullPath = bgImage || process.env.PUBLIC_URL + 'home-header-bg.png'\n\n  let className = 'header'\n\n  if (fullScreen) className += ' full-screen'\n\n  return (\n    <div className={className} style={{backgroundImage: 'url(' + bgFullPath + ')'}}>\n      <div className=\"content\">\n        <HeaderTitle title={title} subtitle={subtitle} />\n        <Container>{children}</Container>\n      </div>\n      {overlay && <div className=\"overlay\" />}\n    </div>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}