{"ast":null,"code":"var _jsxFileName = \"/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemons/list/ListPokemonsLoader.js\";\nimport { Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { MERGE_POKEMONS_LIST, SET_POKEMONS_LIST, SET_POKEMONS_LOADING } from './pokemons.reducer';\nimport { pokemonsResource } from '../../../api/pokemons/pokemonsApi';\nimport { prepareFilterParams } from '../../../helpers/filter';\nimport { sd } from '../../../helpers/redux';\nimport Text from '../../../components/presentation/Text';\n\nclass ListPokemonsLoader extends React.Component {\n  componentWillMount() {\n    const {\n      fetchData,\n      filter,\n      list,\n      refresh\n    } = this.props;\n\n    if (!list.length || refresh) {\n      fetchData(filter, 1);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      refresh,\n      filter,\n      page,\n      fetchMoreData,\n      fetchData\n    } = nextProps; // If the page or refresh is different then before, fetch new data\n\n    if (refresh && refresh !== this.props.refresh) {\n      fetchData(nextProps.filter, 1);\n    } else if (page > 1 && page !== this.props.page) {\n      fetchMoreData(nextProps.filter, nextProps.page);\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      children\n    } = this.props;\n    if (!!isLoading) return React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n    return children;\n  }\n\n}\n\nconst mapState = state => ({\n  list: state.pokemons.list,\n  filter: state.pokemons.filter,\n  page: state.pokemons.page,\n  isLoading: state.pokemons.isLoading,\n  refresh: state.pokemons.refresh\n});\n\nconst mapActions = dispatch => ({\n  fetchData: (filter, page) => {\n    console.log(filter);\n    sd(dispatch, SET_POKEMONS_LOADING, true);\n    pokemonsResource.getList({\n      queryParams: prepareFilterParams(filter)\n    }).then(data => {\n      sd(dispatch, SET_POKEMONS_LIST, data);\n    }).catch(err => {\n      sd(dispatch, SET_POKEMONS_LOADING, false);\n    });\n  },\n  fetchMoreData: (filter, page) => {\n    pokemonsResource.getList({\n      queryParams: {\n        page,\n        ...prepareFilterParams(filter)\n      }\n    }).then(data => {\n      console.log(data);\n      sd(dispatch, MERGE_POKEMONS_LIST, data);\n    });\n  }\n});\n\nexport default connect(mapState, mapActions)(ListPokemonsLoader);","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemons/list/ListPokemonsLoader.js"],"names":["Spinner","connect","React","MERGE_POKEMONS_LIST","SET_POKEMONS_LIST","SET_POKEMONS_LOADING","pokemonsResource","prepareFilterParams","sd","Text","ListPokemonsLoader","Component","componentWillMount","fetchData","filter","list","refresh","props","length","componentWillReceiveProps","nextProps","page","fetchMoreData","render","isLoading","children","mapState","state","pokemons","mapActions","dispatch","console","log","getList","queryParams","then","data","catch","err"],"mappings":";AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,oBAAjD,QAA6E,oBAA7E;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,EAAT,QAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;;AAEA,MAAMC,kBAAN,SAAiCR,KAAK,CAACS,SAAvC,CAAiD;AAChDC,EAAAA,kBAAkB,GAAG;AACpB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA,IAArB;AAA2BC,MAAAA;AAA3B,QAAuC,KAAKC,KAAlD;;AACA,QAAI,CAACF,IAAI,CAACG,MAAN,IAAgBF,OAApB,EAA6B;AAC5BH,MAAAA,SAAS,CAACC,MAAD,EAAS,CAAT,CAAT;AACA;AACD;;AAEDK,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACpC,UAAM;AAAEJ,MAAAA,OAAF;AAAWF,MAAAA,MAAX;AAAmBO,MAAAA,IAAnB;AAAyBC,MAAAA,aAAzB;AAAwCT,MAAAA;AAAxC,QAAsDO,SAA5D,CADoC,CAEpC;;AACA,QAAIJ,OAAO,IAAIA,OAAO,KAAK,KAAKC,KAAL,CAAWD,OAAtC,EAA+C;AAC9CH,MAAAA,SAAS,CAACO,SAAS,CAACN,MAAX,EAAmB,CAAnB,CAAT;AACA,KAFD,MAEO,IAAIO,IAAI,GAAG,CAAP,IAAYA,IAAI,KAAK,KAAKJ,KAAL,CAAWI,IAApC,EAA0C;AAChDC,MAAAA,aAAa,CAACF,SAAS,CAACN,MAAX,EAAmBM,SAAS,CAACC,IAA7B,CAAb;AACA;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,KAAKR,KAArC;AACA,QAAI,CAAC,CAACO,SAAN,EAAiB,OAAO,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACjB,WAAOC,QAAP;AACA;;AAtB+C;;AAyBjD,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC1BZ,EAAAA,IAAI,EAAEY,KAAK,CAACC,QAAN,CAAeb,IADK;AAE1BD,EAAAA,MAAM,EAAEa,KAAK,CAACC,QAAN,CAAed,MAFG;AAG1BO,EAAAA,IAAI,EAAEM,KAAK,CAACC,QAAN,CAAeP,IAHK;AAI1BG,EAAAA,SAAS,EAAEG,KAAK,CAACC,QAAN,CAAeJ,SAJA;AAK1BR,EAAAA,OAAO,EAAEW,KAAK,CAACC,QAAN,CAAeZ;AALE,CAAL,CAAtB;;AAQA,MAAMa,UAAU,GAAGC,QAAQ,KAAK;AAC/BjB,EAAAA,SAAS,EAAE,CAACC,MAAD,EAASO,IAAT,KAAkB;AAC5BU,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACAN,IAAAA,EAAE,CAACsB,QAAD,EAAWzB,oBAAX,EAAiC,IAAjC,CAAF;AACAC,IAAAA,gBAAgB,CACd2B,OADF,CACU;AAAEC,MAAAA,WAAW,EAAE3B,mBAAmB,CAACO,MAAD;AAAlC,KADV,EAEEqB,IAFF,CAEOC,IAAI,IAAI;AACb5B,MAAAA,EAAE,CAACsB,QAAD,EAAW1B,iBAAX,EAA8BgC,IAA9B,CAAF;AACA,KAJF,EAKEC,KALF,CAKQC,GAAG,IAAI;AACb9B,MAAAA,EAAE,CAACsB,QAAD,EAAWzB,oBAAX,EAAiC,KAAjC,CAAF;AACA,KAPF;AAQA,GAZ8B;AAc/BiB,EAAAA,aAAa,EAAE,CAACR,MAAD,EAASO,IAAT,KAAkB;AAChCf,IAAAA,gBAAgB,CAAC2B,OAAjB,CAAyB;AAAEC,MAAAA,WAAW,EAAE;AAAEb,QAAAA,IAAF;AAAQ,WAAGd,mBAAmB,CAACO,MAAD;AAA9B;AAAf,KAAzB,EAAoFqB,IAApF,CAAyFC,IAAI,IAAI;AAChGL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA5B,MAAAA,EAAE,CAACsB,QAAD,EAAW3B,mBAAX,EAAgCiC,IAAhC,CAAF;AACA,KAHD;AAIA;AAnB8B,CAAL,CAA3B;;AAsBA,eAAenC,OAAO,CAACyB,QAAD,EAAWG,UAAX,CAAP,CAA8BnB,kBAA9B,CAAf","sourcesContent":["import { Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport React from 'react'\n\nimport { MERGE_POKEMONS_LIST, SET_POKEMONS_LIST, SET_POKEMONS_LOADING } from './pokemons.reducer'\nimport { pokemonsResource } from '../../../api/pokemons/pokemonsApi'\nimport { prepareFilterParams } from '../../../helpers/filter'\nimport { sd } from '../../../helpers/redux'\nimport Text from '../../../components/presentation/Text'\n\nclass ListPokemonsLoader extends React.Component {\n\tcomponentWillMount() {\n\t\tconst { fetchData, filter, list, refresh } = this.props\n\t\tif (!list.length || refresh) {\n\t\t\tfetchData(filter, 1)\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { refresh, filter, page, fetchMoreData, fetchData } = nextProps\n\t\t// If the page or refresh is different then before, fetch new data\n\t\tif (refresh && refresh !== this.props.refresh) {\n\t\t\tfetchData(nextProps.filter, 1)\n\t\t} else if (page > 1 && page !== this.props.page) {\n\t\t\tfetchMoreData(nextProps.filter, nextProps.page)\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { isLoading, children } = this.props\n\t\tif (!!isLoading) return <Spinner animation=\"border\" variant=\"info\" />\n\t\treturn children\n\t}\n}\n\nconst mapState = state => ({\n\tlist: state.pokemons.list,\n\tfilter: state.pokemons.filter,\n\tpage: state.pokemons.page,\n\tisLoading: state.pokemons.isLoading,\n\trefresh: state.pokemons.refresh\n})\n\nconst mapActions = dispatch => ({\n\tfetchData: (filter, page) => {\n\t\tconsole.log(filter)\n\t\tsd(dispatch, SET_POKEMONS_LOADING, true)\n\t\tpokemonsResource\n\t\t\t.getList({ queryParams: prepareFilterParams(filter) })\n\t\t\t.then(data => {\n\t\t\t\tsd(dispatch, SET_POKEMONS_LIST, data)\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsd(dispatch, SET_POKEMONS_LOADING, false)\n\t\t\t})\n\t},\n\n\tfetchMoreData: (filter, page) => {\n\t\tpokemonsResource.getList({ queryParams: { page, ...prepareFilterParams(filter) } }).then(data => {\n\t\t\tconsole.log(data)\n\t\t\tsd(dispatch, MERGE_POKEMONS_LIST, data)\n\t\t})\n\t}\n})\n\nexport default connect(mapState, mapActions)(ListPokemonsLoader)\n"]},"metadata":{},"sourceType":"module"}