{"ast":null,"code":"import { hasObjectWithID } from '../../../helpers/collection';\nconst defaultState = {\n  list: []\n};\nexport const TOGGLE_FAVORITE_POKEMON = 'TOGGLE_FAVOTIRE_POKEMON';\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case TOGGLE_FAVORITE_POKEMON:\n      let list = state.list;\n      const isNew = !hasObjectWithID(state.list, action.payload.id);\n\n      if (isNew) {\n        list = [...list, action.payload];\n      } else {\n        list = list.filter(item => item.id !== action.payload.id);\n      }\n\n      return { ...state,\n        list\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/modules/pokemons/favorites/favoritePokemons.reducer.js"],"names":["hasObjectWithID","defaultState","list","TOGGLE_FAVORITE_POKEMON","reducer","state","action","type","isNew","payload","id","filter","item"],"mappings":"AAAA,SAASA,eAAT,QAAgC,6BAAhC;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAArB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKJ,uBAAL;AACC,UAAID,IAAI,GAAGG,KAAK,CAACH,IAAjB;AACA,YAAMM,KAAK,GAAG,CAACR,eAAe,CAACK,KAAK,CAACH,IAAP,EAAaI,MAAM,CAACG,OAAP,CAAeC,EAA5B,CAA9B;;AACA,UAAIF,KAAJ,EAAW;AACVN,QAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUI,MAAM,CAACG,OAAjB,CAAP;AACA,OAFD,MAEO;AACNP,QAAAA,IAAI,GAAGA,IAAI,CAACS,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYJ,MAAM,CAACG,OAAP,CAAeC,EAA/C,CAAP;AACA;;AACD,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA;AAAZ,OAAP;;AAED;AACC,aAAOG,KAAP;AAZF;AAcA,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import { hasObjectWithID } from '../../../helpers/collection'\n\nconst defaultState = { list: [] }\n\nexport const TOGGLE_FAVORITE_POKEMON = 'TOGGLE_FAVOTIRE_POKEMON'\n\nconst reducer = (state = defaultState, action) => {\n\tswitch (action.type) {\n\t\tcase TOGGLE_FAVORITE_POKEMON:\n\t\t\tlet list = state.list\n\t\t\tconst isNew = !hasObjectWithID(state.list, action.payload.id)\n\t\t\tif (isNew) {\n\t\t\t\tlist = [...list, action.payload]\n\t\t\t} else {\n\t\t\t\tlist = list.filter(item => item.id !== action.payload.id)\n\t\t\t}\n\t\t\treturn { ...state, list }\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}