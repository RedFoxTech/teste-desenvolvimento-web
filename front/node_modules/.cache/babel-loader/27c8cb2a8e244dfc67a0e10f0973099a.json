{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { LOCATION_CHANGE } from './actions';\n/**\n * Adds query to location.\n * Utilises the search prop of location to construct query.\n */\n\nvar injectQuery = function injectQuery(location) {\n  var searchQuery = location && location.search;\n\n  if (typeof searchQuery !== 'string' || searchQuery.length === 0) {\n    return _objectSpread({}, location, {\n      query: {}\n    });\n  } // Ignore the `?` part of the search string e.g. ?username=codejockie\n\n\n  var search = searchQuery.substring(1); // Split the query string on `&` e.g. ?username=codejockie&name=Kennedy\n\n  var queries = search.split('&'); // Contruct query\n\n  var query = queries.reduce(function (acc, currentQuery) {\n    // Split on `=`, to get key and value\n    var _currentQuery$split = currentQuery.split('='),\n        _currentQuery$split2 = _slicedToArray(_currentQuery$split, 2),\n        queryKey = _currentQuery$split2[0],\n        queryValue = _currentQuery$split2[1];\n\n    return _objectSpread({}, acc, _defineProperty({}, queryKey, queryValue));\n  }, {});\n  return _objectSpread({}, location, {\n    query: query\n  });\n};\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: injectQuery(history.location),\n      action: history.action\n    });\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === LOCATION_CHANGE) {\n        var location = payload.location,\n            action = payload.action,\n            isFirstRendering = payload.isFirstRendering; // Don't update the state ref for the first rendering\n        // to prevent the double-rendering issue on initilization\n\n        return isFirstRendering ? state : merge(state, {\n          location: fromJS(injectQuery(location)),\n          action: action\n        });\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexport default createConnectRouter;","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/node_modules/connected-react-router/esm/reducer.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","_objectSpread","target","arguments","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","defineProperty","configurable","writable","LOCATION_CHANGE","injectQuery","location","searchQuery","search","query","substring","queries","split","reduce","acc","currentQuery","_currentQuery$split","_currentQuery$split2","queryKey","queryValue","createConnectRouter","structure","fromJS","merge","createRouterReducer","history","initialRouterState","action","state","_ref","type","payload","isFirstRendering"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOCATION_CHANGE } from './actions';\n/**\n * Adds query to location.\n * Utilises the search prop of location to construct query.\n */\n\nvar injectQuery = function injectQuery(location) {\n  var searchQuery = location && location.search;\n\n  if (typeof searchQuery !== 'string' || searchQuery.length === 0) {\n    return _objectSpread({}, location, {\n      query: {}\n    });\n  } // Ignore the `?` part of the search string e.g. ?username=codejockie\n\n\n  var search = searchQuery.substring(1); // Split the query string on `&` e.g. ?username=codejockie&name=Kennedy\n\n  var queries = search.split('&'); // Contruct query\n\n  var query = queries.reduce(function (acc, currentQuery) {\n    // Split on `=`, to get key and value\n    var _currentQuery$split = currentQuery.split('='),\n        _currentQuery$split2 = _slicedToArray(_currentQuery$split, 2),\n        queryKey = _currentQuery$split2[0],\n        queryValue = _currentQuery$split2[1];\n\n    return _objectSpread({}, acc, _defineProperty({}, queryKey, queryValue));\n  }, {});\n  return _objectSpread({}, location, {\n    query: query\n  });\n};\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: injectQuery(history.location),\n      action: history.action\n    });\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === LOCATION_CHANGE) {\n        var location = payload.location,\n            action = payload.action,\n            isFirstRendering = payload.isFirstRendering; // Don't update the state ref for the first rendering\n        // to prevent the double-rendering issue on initilization\n\n        return isFirstRendering ? state : merge(state, {\n          location: fromJS(injectQuery(location)),\n          action: action\n        });\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexport default createConnectRouter;"]},"metadata":{},"sourceType":"module"}