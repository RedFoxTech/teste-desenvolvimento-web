{"ast":null,"code":"var _jsxFileName = \"/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/components/form/Select.js\";\nimport './Select.css';\nimport { Form } from 'react-bootstrap';\nimport React from 'react';\n\nconst formatOptions = options => {\n  return options.map(({\n    label,\n    value,\n    groupName,\n    suboptions\n  }) => !!groupName ? React.createElement(\"optgroup\", {\n    key: groupName,\n    label: groupName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, formatOptions(suboptions)) : React.createElement(\"option\", {\n    key: value,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, label));\n};\n\nconst InputText = ({\n  label,\n  onChange,\n  options,\n  value,\n  inputOnly\n}) => {\n  return React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, label), React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: onChange,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, formatOptions(options)));\n};\n\nexport default InputText;","map":{"version":3,"sources":["/Users/ccstorch/Apps/teste-desenvolvimento-web/front/src/components/form/Select.js"],"names":["Form","React","formatOptions","options","map","label","value","groupName","suboptions","InputText","onChange","inputOnly"],"mappings":";AAAA,OAAO,cAAP;AACA,SAASA,IAAT,QAAqB,iBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAGC,OAAO,IAAI;AAChC,SAAOA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,GAAD,KAClB,CAAC,CAACD,SAAF,GACC;AAAU,IAAA,GAAG,EAAEA,SAAf;AAA0B,IAAA,KAAK,EAAEA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,aAAa,CAACM,UAAD,CADf,CADD,GAKC;AAAQ,IAAA,GAAG,EAAEF,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KADF,CANK,CAAP;AAWA,CAZD;;AAcA,MAAMI,SAAS,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASK,EAAAA,QAAT;AAAmBP,EAAAA,OAAnB;AAA4BG,EAAAA,KAA5B;AAAmCK,EAAAA;AAAnC,CAAD,KAAoD;AACrE,SACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaN,KAAb,CADD,EAEC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,MAAM,MAAhC;AAAiC,IAAA,QAAQ,EAAEK,QAA3C;AAAqD,IAAA,KAAK,EAAEJ,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,aAAa,CAACC,OAAD,CADf,CAFD,CADD;AAQA,CATD;;AAWA,eAAeM,SAAf","sourcesContent":["import './Select.css'\nimport { Form } from 'react-bootstrap'\n\nimport React from 'react'\n\nconst formatOptions = options => {\n\treturn options.map(({ label, value, groupName, suboptions }) =>\n\t\t!!groupName ? (\n\t\t\t<optgroup key={groupName} label={groupName}>\n\t\t\t\t{formatOptions(suboptions)}\n\t\t\t</optgroup>\n\t\t) : (\n\t\t\t<option key={value} value={value}>\n\t\t\t\t{label}\n\t\t\t</option>\n\t\t)\n\t)\n}\n\nconst InputText = ({ label, onChange, options, value, inputOnly }) => {\n\treturn (\n\t\t<Form.Group>\n\t\t\t<Form.Label>{label}</Form.Label>\n\t\t\t<Form.Control as=\"select\" custom onChange={onChange} value={value}>\n\t\t\t\t{formatOptions(options)}\n\t\t\t</Form.Control>\n\t\t</Form.Group>\n\t)\n}\n\nexport default InputText\n"]},"metadata":{},"sourceType":"module"}